{"version":3,"sources":["logo.svg","3D/BabylonScene.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Scene3D","props","showFile","e","a","preventDefault","reader","FileReader","onload","array","text","target","result","split","forEach","line","value","push","setupPcs","readAsText","files","state","useWireFrame","shouldAnimate","this","engine","BABYLON","canvas","scene","clearColor","camera","Zero","setPosition","attachControl","SetupScene","SetupCamera","showAxis","runRenderLoop","render","window","addEventListener","resize","size","makeTextPlane","color","dynamicTexture","hasAlpha","drawText","plane","CreatePlane","material","backFaceCulling","specularColor","diffuseTexture","CreateLines","position","pcs","pMax","myfunc","particle","i","s","element","coordinates","x","Number","parseFloat","replace","y","z","p","pMin","r","g","b","pPercent","getColor","console","log","undefined","NaN","addPoints","length","buildMeshAsync","ref","input","inputElement","type","onChange","style","width","innerWidth","height","innerHeight","Component","App","className","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1d8ab4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport * as BABYLON from 'babylonjs';\r\nimport chooseFiles from 'choose-files';\r\n\r\nclass Scene3D extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {useWireFrame: false, shouldAnimate: false};\r\n    }\r\n\r\n    SetupScene() {\r\n        this.engine = new BABYLON.Engine(this.canvas, true);\r\n        this.scene = new BABYLON.Scene(this.engine);\r\n        this.scene.clearColor = new BABYLON.Color3(0.8, 0.8, 0.8);\r\n    }\r\n\r\n    SetupCamera() {\r\n        let camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 0, BABYLON.Vector3.Zero(), this.scene);\r\n        camera.setPosition(new BABYLON.Vector3(0, 0, 20));\r\n        camera.attachControl(this.canvas, true);\r\n    }\r\n\r\n    showFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            const array = [];\r\n            const text = (e.target.result)\r\n            let lines = text.split('\\n');\r\n            lines.forEach((line) => {\r\n                let value = line.split(';');\r\n                array.push(value);\r\n            });\r\n\r\n            await this.setupPcs(array);\r\n        };\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.SetupScene();\r\n        this.SetupCamera();\r\n        this.showAxis(5);\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n        });\r\n        window.addEventListener(\"resize\", function () {\r\n            this.engine.resize();\r\n        });\r\n    }\r\n\r\n    showAxis(size) {\r\n        const makeTextPlane = function (text, color, size, scene) {\r\n            const dynamicTexture = new BABYLON.DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n            dynamicTexture.hasAlpha = true;\r\n            dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\r\n            const plane = new BABYLON.Mesh.CreatePlane(\"TextPlane\", size, scene, true);\r\n            plane.material = new BABYLON.StandardMaterial(\"TextPlaneMaterial\", scene);\r\n            plane.material.backFaceCulling = false;\r\n            plane.material.specularColor = new BABYLON.Color3(0, 0, 0);\r\n            plane.material.diffuseTexture = dynamicTexture;\r\n            return plane;\r\n        };\r\n\r\n        const axisX = BABYLON.Mesh.CreateLines(\"axisX\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, 0.05 * size, 0),\r\n            new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, -0.05 * size, 0)\r\n        ], this.scene);\r\n        axisX.color = new BABYLON.Color3(1, 0, 0);\r\n        const xChar = makeTextPlane(\"X\", \"red\", size / 10, this.scene);\r\n        xChar.position = new BABYLON.Vector3(0.9 * size, -0.05 * size, 0);\r\n        const axisY = BABYLON.Mesh.CreateLines(\"axisY\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(-0.05 * size, size * 0.95, 0),\r\n            new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(0.05 * size, size * 0.95, 0)\r\n        ], this.scene);\r\n        axisY.color = new BABYLON.Color3(0, 1, 0);\r\n        const yChar = makeTextPlane(\"Y\", \"green\", size / 10, this.scene);\r\n        yChar.position = new BABYLON.Vector3(0, 0.9 * size, -0.05 * size);\r\n        const axisZ = BABYLON.Mesh.CreateLines(\"axisZ\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, -0.05 * size, size * 0.95),\r\n            new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, 0.05 * size, size * 0.95)\r\n        ], this.scene);\r\n        axisZ.color = new BABYLON.Color3(0, 0, 1);\r\n        const zChar = makeTextPlane(\"Z\", \"blue\", size / 10, this.scene);\r\n        zChar.position = new BABYLON.Vector3(0, 0.05 * size, 0.9 * size);\r\n    };\r\n\r\n    async setupPcs(array) {\r\n        let pcs = new BABYLON.PointsCloudSystem(\"pcs\", 1, this.scene)\r\n\r\n        const pMin = 0;//Math.min(...array.map(v => v[3]), 0);\r\n        const pMax = 4;//Math.max(...array.map(v => v[3]), 5);\r\n\r\n        const diff = pMax - pMin;\r\n\r\n        let myfunc = function (particle, i, s) {\r\n            let element = array[i];\r\n            const coordinates = {\r\n                x: Number.parseFloat(element[0] ? element[0].replace(',', '.') : 0),\r\n                y: Number.parseFloat(element[1] ? element[1].replace(',', '.') : 0),\r\n                z: Number.parseFloat(element[2] ? element[2].replace(',', '.') : 0),\r\n            }\r\n            let p = element[3];\r\n\r\n            function getColor(p, pMin, pMax) {\r\n\r\n                p = Number.parseFloat(p ? p.replace(',', '.') : 0);\r\n                const pPercent = ((p - pMin) / diff) * 100;\r\n\r\n                let r;\r\n                let g;\r\n                let b;\r\n\r\n                if (pPercent <= 0) {\r\n                    r = 0;\r\n                    g = 0;\r\n                    b = 0;\r\n                } else if (pPercent > 0 && pPercent <= 25) {\r\n                    r = 255;\r\n                    g = 0 - ((0 - 255) / (0 - 25)) * (0 - pPercent);\r\n                    b = 0;\r\n                } else if (pPercent > 25 && pPercent <= 50) {\r\n                    r = 255 - ((255 - 0) / (25 - 50)) * (25 - pPercent);\r\n                    g = 255;\r\n                    b = 0;\r\n                } else if (pPercent > 50 && pPercent <= 75) {\r\n                    r = 0;\r\n                    g = 255;\r\n                    b = 0 - ((0 - 255) / (50 - 100)) * (50 - pPercent);\r\n                } else if (pPercent > 75 && pPercent <= 100) {\r\n                    r = 0;\r\n                    g = 255 - ((255 - 0) / (75 - 100)) * (75 - pPercent);\r\n                    b = 255;\r\n                } else if (pPercent > 100) {\r\n                    r = 0;\r\n                    g = 0;\r\n                    b = 0;\r\n                }\r\n\r\n                return {r, g, b};\r\n            }\r\n\r\n            const {r, g, b} = getColor(p, pMin, pMax);\r\n\r\n            if (r > 255 || b > 255 || g > 255 || r < 0 || b < 0 || g < 0)\r\n                console.log(`p = ${p}; r = ${r}, r = ${g}, b = ${b}`);\r\n\r\n            if (r < 10 && g < 10 && b < 10)\r\n                console.log(`p = ${p}; r = ${r}, r = ${g}, b = ${b}`);\r\n\r\n            if (r === undefined || r === null || r === Number.NaN)\r\n                console.log(\" r is bad!\")\r\n            if (g === undefined || g === null || g === Number.NaN)\r\n                console.log(\" g is bad!\")\r\n            if (b === undefined || b === null || b === Number.NaN)\r\n                console.log(\" b is bad!\")\r\n\r\n            particle.position = new BABYLON.Vector3(coordinates.x, coordinates.y, coordinates.z);\r\n            particle.color = new BABYLON.Color3(r / 255, g / 255, b / 255)\r\n        }\r\n        pcs.addPoints(array.length, myfunc);\r\n        await pcs.buildMeshAsync();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input ref={input => this.inputElement = input} type=\"file\" onChange={(e) => this.showFile(e)}/>\r\n                <canvas\r\n                    style={{width: window.innerWidth, height: window.innerHeight}}\r\n                    ref={canvas => {\r\n                        if (canvas != null)\r\n                            this.canvas = canvas;\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scene3D;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Scene3D from \"./3D/BabylonScene\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Scene3D/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
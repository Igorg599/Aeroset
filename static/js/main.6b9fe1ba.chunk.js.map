{"version":3,"sources":["internationalization/i18n.ts","serviceWorker.js","store/ui/sections/pointCloudSection/pointCloudSection.ts","store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel.ts","store/store.ts","store/rootReducer.ts","store/ui/uiReducer.ts","store/ui/sections/uiSectionsReducer.ts","store/ui/panels/uiPanelsReducer.ts","store/loadState.ts","globalStyle.ts","views/components/theme/defaultAppThemeValues.ts","views/components/theme/theme.ts","views/components/theme/createAppTheme.ts","views/components/theme/ThemeColors.ts","views/components/theme/index.tsx","views/components/theme/themeAccessors.ts","views/components/app/styles.ts","views/components/layout/headerPanel/style.ts","views/components/layout/headerPanel/index.tsx","views/components/layout/sections/pointCloudSection/index.tsx","views/components/layout/instrumentalPanel/style.ts","views/components/shared/style.ts","views/components/layout/instrumentalPanel/index.tsx","views/components/layout/statePanel/style.ts","views/components/layout/statePanel/index.tsx","services/eventBus/EventBus.ts","views/components/layout/scene/code/SceneAspects.ts","services/apiProvider/ApiProvider.ts","environment/ioc/ServiceTypes.ts","services/version/VersionService.ts","environment/ioc/IoC.ts","views/components/layout/scene/code/setupScene.ts","utilities/color/hexToRgb.ts","views/components/layout/scene/code/setupAxis.ts","views/components/layout/scene/code/setupZoom.ts","views/components/layout/scene/style.ts","views/components/layout/pointCloudSystem/code/SolidPoint.ts","utilities/math/calculateMaxMinOfArray.ts","services/eventBus/EventTypes.ts","views/components/layout/pointCloudSystem/code/constructPointCloud.ts","views/components/layout/pointCloudSystem/style.ts","views/components/layout/mobile/drawer/bottom/code/BottomDrawerContentType.ts","views/components/layout/pointCloudSystem/index.tsx","views/components/layout/panels/shared/style.ts","views/components/layout/panels/pointCloudPanel/style.ts","views/components/layout/panels/pointCloudPanel/shared/index.tsx","views/components/layout/panels/pointCloudPanel/index.tsx","views/components/layout/panels/style.ts","views/components/layout/panels/index.tsx","views/components/layout/scene/index.tsx","utilities/dom/isCanvasSupported.ts","views/components/layout/scene/code/setupCamera.ts","views/components/layout/scene/code/setupLight.ts","views/components/layout/mobile/headerPanel/style.ts","views/components/layout/mobile/drawer/left/pointCloudMenuItem/index.tsx","views/components/layout/mobile/drawer/left/style.ts","views/components/version/index.tsx","views/components/layout/mobile/drawer/left/index.tsx","views/components/layout/mobile/drawer/bottom/style.ts","views/components/layout/panels/pointCloudPanel/mobile/style.ts","views/components/layout/panels/pointCloudPanel/mobile/index.tsx","views/components/layout/mobile/drawer/bottom/index.tsx","views/components/layout/mobile/headerPanel/index.tsx","views/components/snackbar/style.ts","views/components/snackbar/index.tsx","views/components/app/index.tsx","index.tsx"],"names":["i18n","use","Backend","initReactI18next","init","fallbackLng","initImmediate","lng","debug","interpolation","escapeValue","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","slice","createSlice","name","initialState","isActive","pointsCloudFile","reducers","pointCloudLoadFile","action","update","$set","payload","showPointCloudFiltersPanel","closePointCloudFiltersPanel","actions","reducer","filterXFromLimit","filterXToLimit","filterYFromLimit","filterYToLimit","filterZFromLimit","filterZToLimit","changeXFromLimit","changeXToLimit","changeYFromLimit","changeYToLimit","changeZFromLimit","changeZToLimit","getPointCloudFiltersPanelSelector","ui","panels","pointCloudFiltersPanel","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","combineReducers","sections","pointCloudSection","pointCloudSectionReducer","preloadedState","middleware","logger","devTools","process","useAppDispatch","useDispatch","GlobalStyle","createGlobalStyle","normalize","defaultAppThemeValues","app","colors","main","white","lightGray","mediumGray","darkGray","lightBlue","mediumBlue","darkBlue","palette","black","gray","blue1","dark","light","medium","blue2","blue3","green","orange","purple1","purple2","red","yellow","font","sizes","header","headerMobile","instrumentalPanel","footer","lang","options","ThemeColors","theme","createMuiTheme","Theme","children","StylesProvider","injectFirst","getTheme","keys","props","path","themeColor","key","appSizes","Area","styled","breakpoints","down","HeaderPanelContainer","div","withTheme","_","t","useTranslation","Tooltip","title","IconButton","size","color","style","marginLeft","fontSize","dispatch","type","onChange","e","preventDefault","file","target","files","undefined","id","display","htmlFor","component","onClick","verticalAlign","Panel","AppDivider","Divider","AppDividerLight","AppDividerBold","AppCloseIcon","CloseIcon","orientation","FooterContainer","EventBus","injectable","eventEmitter","EventEmitter","event","this","listeners","map","f","includes","addListener","removeListener","value","emit","SceneAspects","_engine","_scene","_camera","_light","_pointsCloudSystem","ApiProvider","API_PROVIDER_SERVICE","Symbol","for","EVENT_BUS_SERVICE","VERSION_SERVICE","VersionService","Initialize","year","moment","month","_version","build","IoC","Container","autoBindInjectable","defaultScope","skipBaseClassChecks","bind","to","inSingletonScope","setupScene","engine","scene","BABYLON","hex","replace","m","r","g","b","result","exec","parseInt","hexToRgb","clearColor","sceneBase","makeTextPlane","text","dynamicTexture","hasAlpha","drawText","plane","mesh","CreatePlane","standardMaterial","specularColor","diffuseTexture","material","backFaceCulling","CreateLines","Zero","position","setupAxis","runRenderLoop","render","addEventListener","resize","setupZoom","camera","totalZoom","zoomTarget","onPointerObservable","add","eventData","delta","Math","max","min","wheelDelta","detail","deltaY","totalX","abs","orthoLeft","orthoRight","totalY","orthoTop","orthoBottom","aspectRatio","ratio","x","y","panningSensibility","zoom2DView","POINTERWHEEL","Unproject","pointerX","pointerY","getRenderWidth","getRenderHeight","getWorldMatrix","getViewMatrix","getProjectionMatrix","POINTERMOVE","Canvas","canvas","up","SolidPoint","z","parameter","_x","_y","_z","_parameter","calculateMinMaxOfArray","array","arrayLength","length","borderIncrement","arrayCounter","lastBottomBorder","lastTopBorder","minValue","maxValue","arrayPart","SHOW_SNACKBAR_EVENT","SHOW_NEW_VERSION_EVENT","CLOSE_DRAWER_EVENT","OPEN_BOTTOM_DRAWER_EVENT","constructPointCloud","points","parameterMin","parameterMax","cloudPointFilters","a","filteredPoints","filterPointCloud","pointsCloudSystem","updatable","diffP","constructParticle","particle","i","point","pPercent","pointsCount","addPoints","buildMeshAsync","filter","BottomDrawerContentType","PointCloudContainer","dataSelector","createSelector","pointCloudFilters","PointCloud","useSelector","cloudPointFile","reader","FileReader","onload","fileLines","split","forEach","line","push","Number","parseFloat","p","parameters","apiProvider","get","sceneRootApi","dispose","previousPcsMesh","eventBus","send","message","i18next","alertType","blob","readAsText","setUpPointCloud","PanelContainer","section","width","height","PanelHeaderContainer","strong","PanelHeader","PanelHeaderText","PanelHeaderTypography","Typography","PanelBodyContainer","PointCloudPanelLineContainer","TextField","label","step","isNumeric","InputLabelProps","shrink","inputProps","variant","data","bounds","handle","defaultPosition","float","PanelsContainer","initialize","elem","document","createElement","getContext","isCanvasSupported","alert","sceneAspects","setPosition","attachControl","alpha","PI","mode","ORTHOGRAPHIC_CAMERA","lowerRadiusLimit","radius","upperRadiusLimit","inputs","addMouseWheel","addPointers","setupCamera","intensity","setupLight","onPointerDown","ref","Hidden","smDown","HeaderMobilePanelContainer","useState","subMenuIsOpen","setState","openPanelPointCloudFiltersClickHandle","contentType","Fragment","ListItem","button","ListItemIcon","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","paddingLeft","DrawerContainer","DrawerHeader","spacing","DrawerHeaderTitle","Version","isDark","GetVersion","isOpen","useEffect","handleDrawerClose","Drawer","anchor","open","onClose","aria-labelledby","bottom","left","DrawerBottomContainer","DrawerBottomHeader","MobilePanelContainer","currentType","stateType","valueOf","PointCloudPanelMobileContainer","visiblePanel","subscribe","contentChangedHandler","unsubscribe","events","content","marginRight","drawerIsOpen","onCloseDrawerEvent","AppBar","Toolbar","background","aria-label","flexGrow","SnackbarWrapper","isVersionSnackbar","snackbarState","setSnackbarState","snackbarEventHandler","showNewVersionEventHandler","callback","updateVersionAction","Button","reload","Snackbar","alignContent","anchorOrigin","vertical","horizontal","reason","autoHideDuration","Alert","severity","closeText","top","Grid","container","alignItems","direction","item","xs","mdUp","renderRefreshUI","ReactDOM","StrictMode","CssBaseline","fallback","getElementById","onerror","errorMsg","url","lineNumber","URL","href","origin","fetch","headers","response","status","indexOf","ready","unregister","checkValidServiceWorker","initWorkboxRefresh"],"mappings":"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","file":"static/js/main.6b9fe1ba.chunk.js","sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        initImmediate : false,\r\n        lng: \"ru\",\r\n        debug: true,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        }\r\n    });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n      console.log(swUrl)\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice, PayloadAction, createEntityAdapter, Selector} from \"@reduxjs/toolkit\";\r\nimport {SectionState} from \"../base/SectionState\";\r\nimport update from \"immutability-helper\";\r\nimport {ApplicationState} from \"../../../store\";\r\n\r\nexport interface PointCloudSectionState extends SectionState {\r\n    pointsCloudFile: File | null;\r\n}\r\n\r\nconst defaultState: PointCloudSectionState = {\r\n    isActive: true,\r\n    pointsCloudFile: null,\r\n}\r\n\r\n//Todo: remake using Immer\r\nconst slice = createSlice({\r\n    name: \"pointCloudSection\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        pointCloudLoadFile(state: PointCloudSectionState, action: PayloadAction<File>) {\r\n            return update(state, {\r\n                pointsCloudFile: {$set: action.payload}\r\n            });\r\n        },\r\n        showPointCloudFiltersPanel(state: PointCloudSectionState) {\r\n            return update(state, {\r\n                isActive: {$set: true}\r\n            });\r\n        },\r\n        closePointCloudFiltersPanel(state: PointCloudSectionState) {\r\n            return update(state, {\r\n                isActive: {$set: false}\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nexport const pointCloudFiltersPanelActivitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.sections.pointCloudSection.isActive;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {pointCloudLoadFile, showPointCloudFiltersPanel, closePointCloudFiltersPanel} = actions;\r\nexport default reducer;","import {createSlice, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../../../store\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport interface PointCloudFiltersState {\r\n    filterXFromLimit: number,\r\n    filterXToLimit: number,\r\n    filterYFromLimit: number,\r\n    filterYToLimit: number,\r\n    filterZFromLimit: number,\r\n    filterZToLimit: number,\r\n};\r\n\r\nconst defaultState: PointCloudFiltersState = {\r\n    filterXFromLimit: -100,\r\n    filterXToLimit: 100,\r\n    filterYFromLimit: -100,\r\n    filterYToLimit: 100,\r\n    filterZFromLimit: -100,\r\n    filterZToLimit: 100\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"pointCloudFiltersPanel\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        changeXFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterXFromLimit: {$set: action.payload}\r\n            }),\r\n        changeXToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterXToLimit: {$set: action.payload}\r\n            }),\r\n        changeYFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterYFromLimit: {$set: action.payload}\r\n            }),\r\n        changeYToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterYToLimit: {$set: action.payload}\r\n            }),\r\n        changeZFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterZFromLimit: {$set: action.payload}\r\n            }),\r\n        changeZToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterZToLimit: {$set: action.payload}\r\n            })\r\n    }\r\n});\r\n\r\nexport const getPointCloudFiltersPanelSelector: Selector<ApplicationState, PointCloudFiltersState> =\r\n    state => state.ui.panels.pointCloudFiltersPanel;\r\n\r\nconst {actions, reducer} = slice\r\nexport const {changeXFromLimit, changeXToLimit, changeYFromLimit, changeYToLimit, changeZFromLimit, changeZToLimit} = actions\r\nconst pointCloudFiltersPanel = reducer\r\nexport default pointCloudFiltersPanel","import rootReducer from './rootReducer'\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport loadState from \"./loadState\";\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport {useDispatch} from \"react-redux\";\r\nimport logger from 'redux-logger';\r\n\r\nexport const composeEnhancers =\r\n    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer(),\r\n    preloadedState: loadState(),\r\n    middleware: [logger],\r\n    devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type ApplicationState = ReturnType<typeof store.getState>;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();","import {combineReducers} from 'redux'\r\nimport uiReducer from \"./ui/uiReducer\";\r\n\r\nexport default function rootReducer() {\r\n    return combineReducers({\r\n        ui: uiReducer(),\r\n    });\r\n};","import {combineReducers} from \"redux\";\r\nimport uiSectionsReducer from \"./sections/uiSectionsReducer\";\r\nimport uiPanelReducer from \"./panels/uiPanelsReducer\";\r\n\r\nexport default function uiReducer() {\r\n    return combineReducers({\r\n            sections: uiSectionsReducer(),\r\n            panels: uiPanelReducer()\r\n        }\r\n    )\r\n}","import {combineReducers} from \"redux\";\r\nimport {default as pointCloudSectionReducer} from \"./pointCloudSection/pointCloudSection\";\r\n\r\nexport default function uiSectionsReducer() {\r\n    return combineReducers({\r\n        pointCloudSection: pointCloudSectionReducer\r\n    })\r\n}","import {combineReducers} from \"redux\";\r\nimport pointCloudFiltersPanel from \"./pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\n\r\nexport default function uiPanelReducer() {\r\n    return combineReducers({\r\n        pointCloudFiltersPanel: pointCloudFiltersPanel\r\n    })\r\n}","//Todo: load state from database\r\nexport default function loadState() {\r\n    return {};\r\n}","import {createGlobalStyle} from 'styled-components'\r\nimport {normalize} from 'styled-normalize'\r\n\r\n// noinspection Stylelint\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize};\r\n  \r\n   html, body {\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    width: 100%;\r\n    font-family: 'Roboto', 'Segoe UI',sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow:hidden;\r\n    box-sizing: border-box;\r\n    *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    touch-action: none;\r\n    -ms-touch-action: none;\r\n    }\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, monospace;\r\n  }\r\n`","export const defaultAppThemeValues = {\r\n    app: {\r\n        colors: {\r\n            main: {\r\n                white: \"#ffffff\",\r\n                lightGray: \"#f7f7f7\",\r\n                mediumGray: \"#969696\",\r\n                darkGray: \"#363835\",\r\n                lightBlue: \"#bee7f1\",\r\n                mediumBlue: \"#7dd0e4\",\r\n                darkBlue: \"#137cbf\",\r\n            },\r\n            palette: {\r\n                white: \"#ffffff\",\r\n                black: \"\",\r\n                gray: \"\",\r\n                blue1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue3: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                green: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                orange: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                red: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                yellow: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                }\r\n            }\r\n        },\r\n        font: \"Roboto\",\r\n        sizes: {\r\n            header : 48,\r\n            headerMobile: 56,\r\n            instrumentalPanel : 32,\r\n            footer : 30,\r\n        },\r\n        lang : \"ru\"\r\n\r\n    }\r\n};","import {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\nimport createAppTheme from \"./createAppTheme\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\nconst theme: Theme = createAppTheme({\r\n    ...defaultAppThemeValues\r\n})\r\nexport default theme;","import {createMuiTheme, Theme, ThemeOptions} from \"@material-ui/core\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n    interface Theme {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile:number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n\r\n    interface ThemeOptions {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile: number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n}\r\n\r\nexport default function createAppTheme(options: ThemeOptions) : Theme {\r\n    return createMuiTheme({\r\n        ...options,\r\n        ...defaultAppThemeValues\r\n    })\r\n}\r\n","export enum ThemeColors {\r\n    white,\r\n    lightGray,\r\n    mediumGray,\r\n    darkGray,\r\n    lightBlue,\r\n    mediumBlue,\r\n    darkBlue,\r\n}","import {MuiThemeProvider, StylesProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\n// @ts-ignore\r\nconst Theme = ({children}) => (\r\n    <StylesProvider injectFirst>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                {children}\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </StylesProvider>\r\n);\r\n\r\nexport default Theme","import {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\n\r\n// @ts-ignore\r\nexport const getTheme: string = (keys: any[] = []) =>\r\n// @ts-ignore\r\n    props => path(['theme', 'app', ...keys], props);\r\n// @ts-ignore\r\nexport const themeColor = (key: ThemeColors) => getTheme(['colors', \"main\", ThemeColors[key]]);\r\n// @ts-ignore\r\nexport const paletteColor = (key: string) => getTheme(['colors', \"palette\", key]);\r\n// @ts-ignore\r\nexport const appSizes = (key: string) => getTheme(['sizes', key]);","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../theme/themeAccessors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport const Area = styled.main<Theme>`\r\n  //noinspection ALL${props => props.theme.breakpoints.up(\"sm\")} {\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n  }\r\n   ${props => props.theme.breakpoints.down(\"sm\")} {\r\n   height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n  }\r\n  background: ${themeColor(ThemeColors.lightBlue)};\r\n`\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const HeaderPanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.mediumGray)};\r\nheight: ${appSizes(\"header\")}px;\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: row-reverse;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`\r\n","import React from \"react\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderPanelContainer} from \"./style\";\r\n\r\nconst HeaderPanel: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <HeaderPanelContainer>\r\n            <Tooltip title={t('user_account')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            style={{marginLeft: 10}}>\r\n                    <AccountCircleIcon style={{color: \"white\", fontSize: 35}}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </HeaderPanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderPanel);","import React, {Fragment} from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {\r\n    pointCloudLoadFile,\r\n    showPointCloudFiltersPanel\r\n} from \"../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport DialpadIcon from \"@material-ui/icons/Dialpad\";\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\n\r\nconst PointCloudSection: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <input\r\n                    color=\"primary\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        const file: File = e.target.files?.[0] as File;\r\n                        if (file && file !== undefined) {\r\n                            dispatch(pointCloudLoadFile(file));\r\n                        }\r\n                    }}\r\n                    id=\"icon-button-file\"\r\n                    style={{display: 'none',}}/>\r\n                <Tooltip title={t('load_file_with_point_cloud')}>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <CloudUploadIcon style={{color: \"white\"}}/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n            <Tooltip title={t('open_panel_point_cloud_filters')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={() =>\r\n                                dispatch(showPointCloudFiltersPanel())}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <DialpadIcon style={{color: \"white\"}}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t('point_cloud_clear')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => null}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <ClearAllIcon style={{color: \"white\"}}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withTheme(PointCloudSection);","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const Panel = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.mediumGray)};\r\nheight: ${appSizes(\"instrumentalPanel\")}px;\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`","import styled from \"styled-components\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport const AppDivider = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.mediumGray)};\r\n`\r\n\r\nexport const AppDividerLight = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\n`\r\n\r\nexport const AppDividerBold = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\nwidth: 1.15px;\r\nheight: 24px;\r\nmargin-left: 8px;\r\nmargin-right: 8px;\r\n`\r\n\r\nexport const AppCloseIcon = styled(CloseIcon)`\r\ncolor: ${themeColor(ThemeColors.white)};\r\n`\r\n","import React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudSection from \"../sections/pointCloudSection\";\r\nimport {Panel} from \"./style\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {AppDividerBold} from \"../../shared/style\";\r\n\r\nconst InstrumentalPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <Panel>\r\n            <PointCloudSection/>\r\n            <AppDividerBold orientation=\"vertical\"/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default withTheme(InstrumentalPanel);","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const FooterContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.mediumGray)};\r\nheight: ${appSizes(\"footer\")}px;\r\n`","import React, {Component, useState} from 'react';\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {FooterContainer} from \"./style\";\r\n\r\nconst StatePanel: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <FooterContainer>\r\n        </FooterContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(StatePanel);","import {injectable} from \"inversify\";\r\nimport {EventBusService} from \"./EventBusService\";\r\nimport {EventListenerFn} from \"./EventListenerFn\";\r\nimport EventEmitter from \"events\";\r\n\r\n@injectable()\r\nclass EventBus implements EventBusService {\r\n    protected eventEmitter: EventEmitter.EventEmitter = new EventEmitter.EventEmitter();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    subscribe(event: string, action: EventListenerFn): void {\r\n        const functions: Function[] = this.eventEmitter.listeners(event);\r\n        const alreadySubscribed = functions.map(f => f.name).includes(action.name)\r\n\r\n        if(!alreadySubscribed)\r\n            this.eventEmitter.addListener(event, action);\r\n    }\r\n\r\n    unsubscribe(event: string, action: EventListenerFn): void {\r\n        this.eventEmitter.removeListener(event, action);\r\n    }\r\n\r\n    send(event: string, value: any): void {\r\n        this.eventEmitter.emit(event, [value]);\r\n    }\r\n}\r\n\r\nexport default EventBus","import {Engine} from \"babylonjs/Engines/engine\";\r\nimport {ArcRotateCamera} from \"babylonjs/Cameras/arcRotateCamera\";\r\nimport {Light} from \"babylonjs/Lights/light\";\r\nimport {Scene} from \"babylonjs/scene\";\r\nimport {PointsCloudSystem} from \"babylonjs/Particles/pointsCloudSystem\";\r\n\r\nexport default class SceneAspects {\r\n    private _engine: Engine | null = null;\r\n    private _scene: Scene | null = null;\r\n    private _camera: ArcRotateCamera | null = null;\r\n    private _light: Light | null = null\r\n    private _pointsCloudSystem: PointsCloudSystem | null = null\r\n\r\n    get pointsCloudSystem(): PointsCloudSystem | null {\r\n        return this._pointsCloudSystem;\r\n    }\r\n    set pointsCloudSystem(value: PointsCloudSystem | null) {\r\n        this._pointsCloudSystem = value;\r\n    }\r\n    get light(): Light | null {\r\n        return this._light;\r\n    }\r\n\r\n    set light(value: Light | null) {\r\n        this._light = value;\r\n    }\r\n\r\n    get camera(): ArcRotateCamera | null {\r\n        return this._camera;\r\n    }\r\n\r\n    set camera(value: ArcRotateCamera | null) {\r\n        this._camera = value;\r\n    }\r\n\r\n    get scene(): Scene | null {\r\n        return this._scene;\r\n    }\r\n\r\n    set scene(value: Scene | null) {\r\n        this._scene = value;\r\n    }\r\n\r\n    set engine(value: Engine | null) {\r\n        this._engine = value;\r\n    }\r\n\r\n    get engine(): Engine | null {\r\n        return this._engine;\r\n    }\r\n}","import {injectable} from \"inversify\";\r\nimport SceneAspects from \"../../views/components/layout/scene/code/SceneAspects\";\r\n\r\n@injectable()\r\nclass ApiProvider {\r\n    private _scene: SceneAspects = new SceneAspects();\r\n\r\n    get scene(): SceneAspects {\r\n        return this._scene;\r\n    }\r\n}\r\n\r\nexport default ApiProvider;\r\n","export const API_PROVIDER_SERVICE: symbol = Symbol.for(\"API_PROVIDER_SERVICE\");\r\nexport const EVENT_BUS_SERVICE: symbol = Symbol.for(\"EventBusService\");\r\nexport const VERSION_SERVICE: symbol = Symbol.for(\"VERSION_SERVICE\");","import {injectable} from \"inversify\";\r\nimport {build} from '../../metadata.json';\r\nimport moment from \"moment/moment\";\r\n\r\n@injectable()\r\nclass VersionService {\r\n    private static _version: string = \"None\";\r\n\r\n    constructor() {\r\n        this.Initialize()\r\n    }\r\n\r\n    private async Initialize() {\r\n        const year = moment().year()\r\n        const month = moment().month() + 1\r\n        VersionService._version = `${year}.${month}.${build}`\r\n    }\r\n\r\n    public GetVersion(): string {\r\n        return VersionService._version\r\n    }\r\n}\r\n\r\nexport default VersionService;","import \"reflect-metadata\";\r\nimport EventBus from '../../services/eventBus/EventBus';\r\nimport ApiProvider from \"../../services/apiProvider/ApiProvider\";\r\nimport {EventBusService} from \"../../services/eventBus/EventBusService\";\r\nimport {Container} from \"inversify\";\r\nimport {API_PROVIDER_SERVICE, EVENT_BUS_SERVICE, VERSION_SERVICE} from \"./ServiceTypes\";\r\nimport VersionService from \"../../services/version/VersionService\";\r\n\r\nconst IoC = new Container({\r\n    autoBindInjectable: true,\r\n    defaultScope: \"Singleton\",\r\n    skipBaseClassChecks: true\r\n});\r\n\r\nIoC.bind<EventBusService>(EVENT_BUS_SERVICE).to(EventBus).inSingletonScope();\r\nIoC.bind<ApiProvider>(API_PROVIDER_SERVICE).to(ApiProvider).inSingletonScope();\r\nIoC.bind<VersionService>(VERSION_SERVICE).to(VersionService).inSingletonScope();\r\n\r\nexport default IoC;\r\n","import * as BABYLON from \"babylonjs\";\r\nimport setupAxis from \"./setupAxis\";\r\nimport {hexToRgb} from \"../../../../../utilities/color/hexToRgb\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport { Theme } from \"@material-ui/core\";\r\nimport {themeColor} from \"../../../theme/themeAccessors\";\r\n\r\nexport default function setupScene(engine: BABYLON.Engine, theme: Theme): BABYLON.Scene {\r\n    const scene: BABYLON.Scene = new BABYLON.Scene(engine);\r\n\r\n    const colorHex = themeColor(ThemeColors.mediumBlue)({theme});\r\n    const color = hexToRgb(colorHex);\r\n    if(color && color !== null)\r\n        scene.clearColor = new BABYLON.Color4(color.r / 255, color.g / 255, color.b / 255, 1);\r\n\r\n    setupAxis(scene, 2);\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n    });\r\n    window.addEventListener(\"resize\", () => {\r\n        engine.resize();\r\n    });\r\n\r\n    return scene;\r\n}\r\n\r\n\r\n// /** Add map-like controls to an ArcRotate camera.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {module:babylonjs/Cameras/arcRotateCamera.ArcRotateCamera} camera\r\n//  */\r\n// function AddControls(scene, camera) {\r\n//\r\n//     camera.inertia = 0.2;\r\n//     camera.lowerRadiusLimit = 1;\r\n//     camera.upperRadiusLimit = 350;\r\n//     // camera.upperBetaLimit = Math.PI / 2 - 0.1;\r\n//     camera.angularSensibilityX = camera.angularSensibilityY = 500;\r\n//\r\n//     const plane =\r\n//         BABYLON.Plane.FromPositionAndNormal(BABYLON.Vector3.Zero(), BABYLON.Axis.Y);\r\n//\r\n//     const inertialPanning = BABYLON.Vector3.Zero();\r\n//\r\n//     /** @type {BABYLON.Vector3} */\r\n//     let initialPos;\r\n//     const panningFn = () => {\r\n//         return;\r\n//         const pos = getPosition(scene, camera, plane);\r\n//         panning(pos, initialPos, camera.inertia, inertialPanning);\r\n//     };\r\n//\r\n//     const inertialPanningFn = () => {\r\n//         if (inertialPanning.x !== 0 || inertialPanning.y !== 0 || inertialPanning.z !== 0) {\r\n//             camera.target.addInPlace(inertialPanning);\r\n//             inertialPanning.scaleInPlace(camera.inertia);\r\n//             zeroIfClose(inertialPanning);\r\n//         }\r\n//     };\r\n//\r\n//     const wheelPrecisionFn = () => {\r\n//         camera.wheelPrecision = 1 / camera.radius * 1000;\r\n//     };\r\n//\r\n//     const zoomFn = (p, e) => {\r\n//         const delta = zoomWheel(p, e, camera);\r\n//         zooming(delta, scene, camera, plane, inertialPanning);\r\n//     }\r\n//\r\n//     const prvScreenPos = BABYLON.Vector2.Zero();\r\n//     const rotateFn = () => {\r\n//         return;\r\n//         rotating(scene, camera, prvScreenPos);\r\n//     };\r\n//\r\n//     const removeObservers = () => {\r\n//         scene.onPointerObservable.removeCallback(panningFn);\r\n//         scene.onPointerObservable.removeCallback(rotateFn);\r\n//     }\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//         if (p.event.button === 0) {\r\n//             initialPos = getPosition(scene, camera, plane);\r\n//             scene.onPointerObservable.add(panningFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         } else {\r\n//             prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//             scene.onPointerObservable.add(rotateFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         }\r\n//     }, BABYLON.PointerEventTypes.POINTERDOWN);\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//     }, BABYLON.PointerEventTypes.POINTERUP);\r\n//\r\n//     scene.onPointerObservable.add(zoomFn, BABYLON.PointerEventTypes.POINTERWHEEL);\r\n//\r\n//     scene.onBeforeRenderObservable.add(inertialPanningFn);\r\n//     scene.onBeforeRenderObservable.add(wheelPrecisionFn);\r\n//\r\n//     // stop context menu showing on canvas right click\r\n//     scene.getEngine().getRenderingCanvas().addEventListener(\"contextmenu\", (e) => {\r\n//         e.preventDefault();\r\n//     });\r\n// }\r\n//\r\n// /** Get pos on plane.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  */\r\n// function getPosition(scene, camera, plane) {\r\n//     return null;\r\n//     const ray = scene.createPickingRay(\r\n//         scene.pointerX, scene.pointerY, BABYLON.Matrix.Identity(), camera, false);\r\n//     const distance = ray.intersectsPlane(plane);\r\n//\r\n//     // not using this ray again, so modifying its vectors here is fine\r\n//     return distance !== null ?\r\n//         ray.origin.addInPlace(ray.direction.scaleInPlace(distance)) : null;\r\n// }\r\n//\r\n// /** Return offsets for inertial panning given initialize and current\r\n//  * pointer positions.\r\n//  * @param {BABYLON.Vector3} newPos\r\n//  * @param {BABYLON.Vector3} initialPos\r\n//  * @param {number} inertia\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function panning(newPos, initialPos, inertia, ref) {\r\n//     const directionToZoomLocation = initialPos.subtract(newPos);\r\n//     const panningX = directionToZoomLocation.x * (1 - inertia);\r\n//     const panningZ = directionToZoomLocation.z * (1 - inertia);\r\n//     ref.copyFromFloats(panningX, 0, panningZ);\r\n//     return ref;\r\n// };\r\n//\r\n// /** Get the wheel delta divided by the camera wheel precision.\r\n//  * @param {BABYLON.PointerInfoPre} p\r\n//  * @param {BABYLON.EventState} e\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function zoomWheel(p, e, camera) {\r\n//     const event = p.event;\r\n//     event.preventDefault();\r\n//     let delta = event.wheelDelta;\r\n//     //if (event.deltaY) {\r\n//     //    delta = -event.deltaY;\r\n//     //} else if (event.wheelDelta) {\r\n//     //    delta = event.wheelDelta;\r\n//     //} else if (event.detail) {\r\n//     //    delta = -event.detail;\r\n//     //}\r\n//     delta /= camera.wheelPrecision;\r\n//     return delta;\r\n// }\r\n//\r\n// /** Zoom to pointer position. Zoom amount determined by delta.\r\n//  * @param {number} delta\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function zooming(delta, scene, camera, plane, ref) {\r\n//     // if (camera.radius - camera.lowerRadiusLimit < 1 && delta > 0) {\r\n//     //     return;\r\n//     // } else if (camera.upperRadiusLimit - camera.radius < 1 && delta < 0) {\r\n//     //     return;\r\n//     // }\r\n//     const inertiaComp = 1 - camera.inertia;\r\n//     if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp < camera.lowerRadiusLimit) {\r\n//         delta = (camera.radius - camera.lowerRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     } else if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp >\r\n//         camera.upperRadiusLimit) {\r\n//         delta = (camera.radius - camera.upperRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     }\r\n//\r\n//     const zoomDistance = delta / inertiaComp;\r\n//     const ratio = zoomDistance / camera.radius;\r\n//     const vec = getPosition(scene, camera, plane);\r\n//\r\n//     if (vec !== undefined && vec) {\r\n//         const directionToZoomLocation = vec.subtract(camera.target);\r\n//         const offset = directionToZoomLocation.scale(ratio);\r\n//         offset.scaleInPlace(inertiaComp);\r\n//         ref.addInPlace(offset);\r\n//     }\r\n//     camera.inertialRadiusOffset += delta;\r\n// }\r\n//\r\n// /** Rotate the camera\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.Vector2} prvScreenPos\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function rotating(scene, camera, prvScreenPos) {\r\n//     const offsetX = scene.pointerX - prvScreenPos.x;\r\n//     const offsetY = scene.pointerY - prvScreenPos.y;\r\n//     prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//     changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera);\r\n// }\r\n//\r\n// /** Modifies the camera's inertial alpha and beta offsets.\r\n//  * @param {number} offsetX\r\n//  * @param {number} offsetY\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera) {\r\n//     const alphaOffsetDelta = offsetX / camera.angularSensibilityX;\r\n//     const betaOffsetDelta = offsetY / camera.angularSensibilityY;\r\n//     camera.inertialAlphaOffset -= alphaOffsetDelta;\r\n//     camera.inertialBetaOffset -= betaOffsetDelta;\r\n// }\r\n//\r\n// /** Sets x y or z of passed in vector to zero if less than Epsilon.\r\n//  * @param {BABYLON.Vector3} vec\r\n//  */\r\n// function zeroIfClose(vec) {\r\n//     if (Math.abs(vec.x) < BABYLON.Epsilon) {\r\n//         vec.x = 0;\r\n//     }\r\n//     if (Math.abs(vec.y) < BABYLON.Epsilon) {\r\n//         vec.y = 0;\r\n//     }\r\n//     if (Math.abs(vec.z) < BABYLON.Epsilon) {\r\n//         vec.z = 0;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n","export const hexToRgb = (hex : string) => {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n}","import * as BABYLON from \"babylonjs\";\r\nimport {StandardMaterial} from \"babylonjs/Materials/standardMaterial\";\r\n\r\nexport default function setupAxis(sceneBase : BABYLON.Scene,  size:number){\r\n\r\n    const makeTextPlane = function (text: string, color: string, size: number, scene: BABYLON.Scene) {\r\n        const dynamicTexture = new BABYLON.DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n        dynamicTexture.hasAlpha = true;\r\n        dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\r\n        const plane = mesh.CreatePlane(\"TextPlane\", size, scene, true);\r\n        let standardMaterial : StandardMaterial = new BABYLON.StandardMaterial(\"TextPlaneMaterial\", scene);\r\n        standardMaterial.specularColor = new BABYLON.Color3(0, 0, 0);\r\n        standardMaterial.diffuseTexture = dynamicTexture;\r\n        plane.material = standardMaterial;\r\n        plane.material.backFaceCulling = false;\r\n        return plane;\r\n    };\r\n\r\n    const mesh = BABYLON.Mesh;\r\n\r\n    const axisX = mesh.CreateLines(\"axisX\", [\r\n        BABYLON.Vector3.Zero(), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, 0.05 * size, 0),\r\n        new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, -0.05 * size, 0)\r\n    ], sceneBase);\r\n    axisX.color = new BABYLON.Color3(1, 0, 0);\r\n    const xChar = makeTextPlane(\"X\", \"red\", size / 10, sceneBase);\r\n    xChar.position = new BABYLON.Vector3(0.9 * size, -0.05 * size, 0);\r\n    const axisY = mesh.CreateLines(\"axisY\", [\r\n        BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(-0.05 * size, size * 0.95, 0),\r\n        new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(0.05 * size, size * 0.95, 0)\r\n    ], sceneBase);\r\n    axisY.color = new BABYLON.Color3(0, 1, 0);\r\n    const yChar = makeTextPlane(\"Y\", \"green\", size / 10, sceneBase);\r\n    yChar.position = new BABYLON.Vector3(0, 0.9 * size, -0.05 * size);\r\n    const axisZ = mesh.CreateLines(\"axisZ\", [\r\n        BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, -0.05 * size, size * 0.95),\r\n        new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, 0.05 * size, size * 0.95)\r\n    ], sceneBase);\r\n    axisZ.color = new BABYLON.Color3(0, 0, 1);\r\n    const zChar = makeTextPlane(\"Z\", \"blue\", size / 10, sceneBase);\r\n    zChar.position = new BABYLON.Vector3(0, 0.05 * size, 0.9 * size);\r\n}","import {Scene} from \"babylonjs/scene\";\r\nimport * as BABYLON from \"babylonjs\";\r\nimport {Camera} from \"babylonjs/Cameras/camera\";\r\nimport {Vector3} from \"babylonjs/Maths/math.vector\";\r\nimport {Engine} from \"babylonjs/Engines/engine\";\r\nimport {ArcRotateCamera} from \"babylonjs/Cameras/arcRotateCamera\";\r\n\r\nexport default function setupZoom(scene: Scene, engine: Engine, camera: Camera){\r\n    let totalZoom = 0;\r\n    let zoomTarget : Vector3|null = null;\r\n\r\n    scene.onPointerObservable.add((eventData,_) => {\r\n        const event = eventData.event as any;\r\n        const delta = (Math.max(-1, Math.min(1, (event.wheelDelta || -event.detail || event.deltaY)))) * 0.9;\r\n        if (delta > 0 && totalZoom < 14 || delta < 0) {\r\n            totalZoom += delta;\r\n            zoom2DView(camera, delta, zoomTarget);\r\n        }\r\n    }, BABYLON.PointerEventTypes.POINTERWHEEL);\r\n    scene.onPointerObservable.add(() => {\r\n        zoomTarget = BABYLON.Vector3.Unproject(\r\n            new BABYLON.Vector3(scene.pointerX, scene.pointerY, 0),\r\n            engine.getRenderWidth(),\r\n            engine.getRenderHeight(),\r\n            camera.getWorldMatrix(),\r\n            camera.getViewMatrix(),\r\n            camera.getProjectionMatrix()\r\n        );\r\n    }, BABYLON.PointerEventTypes.POINTERMOVE);\r\n}\r\n\r\nfunction zoom2DView(camera : Camera, delta : number, zoomTarget : Vector3|null){\r\n    const zoomingOut = delta < 0;\r\n\r\n    if (zoomTarget) {\r\n        const totalX = Math.abs(camera.orthoLeft! - camera.orthoRight!);\r\n        const totalY = Math.abs(camera.orthoTop! - camera.orthoBottom!);\r\n\r\n        const aspectRatio = totalY / totalX;\r\n\r\n        {\r\n            const fromCoord = camera.orthoLeft! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoLeft! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoRight! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoRight! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoTop! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoTop! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoBottom! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoBottom! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        // decrease pan sensitivity the closer the zoom level.\r\n        (camera as ArcRotateCamera).panningSensibility = 6250 / Math.abs(totalX / 2);\r\n    }\r\n};","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const Canvas = styled.canvas<Theme>`\r\n   outline: none;\r\n   display: block;\r\n   margin: 0;\r\n   padding: 0;\r\n   width: 100%;\r\n   ${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props) }px);\r\n   }\r\n   ${props => props.theme.breakpoints.down(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n   }\r\n   touch-action: none;\r\n`","export default class SolidPoint {\r\n\r\n    private _x: number = 0;\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    private _y: number = 0;\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n\r\n    private _z: number = 0;\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(value: number) {\r\n        this._z = value;\r\n    }\r\n\r\n    private _parameter: number = 0;\r\n    get parameter() {\r\n        return this._parameter;\r\n    }\r\n\r\n    set parameter(value: number) {\r\n        this._parameter = value;\r\n    }\r\n\r\n    constructor(x: number, y: number, z: number, parameter: number) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._parameter = parameter;\r\n    }\r\n}","export default function calculateMinMaxOfArray(array : Array<number>) {\r\n    const arrayLength = array.length;\r\n    const borderIncrement = 125000;\r\n    let arrayCounter = 0;\r\n    let lastBottomBorder = 0;\r\n    let lastTopBorder = borderIncrement;\r\n    let minValue = 0;\r\n    let maxValue = 0;\r\n\r\n    while (true) {\r\n        const arrayPart = array.slice(lastBottomBorder, lastTopBorder)\r\n\r\n        let min = Math.min(...arrayPart);\r\n        let max = Math.max(...arrayPart);\r\n\r\n        minValue = min < minValue ? min : minValue;\r\n        maxValue = max > maxValue ? max : maxValue;\r\n\r\n        lastBottomBorder += borderIncrement;\r\n        lastTopBorder += borderIncrement;\r\n        arrayCounter += arrayPart.length;\r\n\r\n        if (arrayCounter >= arrayLength)\r\n            break;\r\n    }\r\n\r\n    return {min: minValue, max: maxValue};\r\n}","export const SHOW_SNACKBAR_EVENT = \"SHOW_SNACKBAR\";\r\nexport const SHOW_NEW_VERSION_EVENT = \"SHOW_NEW_VERSION_EVENT\";\r\nexport const CLOSE_DRAWER_EVENT = \"CLOSE_DRAWER_EVENT\";\r\nexport const OPEN_BOTTOM_DRAWER_EVENT = \"OPEN_BOTTOM_DRAWER_EVENT\";","import * as BABYLON from \"babylonjs\";\r\nimport {Scene} from \"babylonjs/scene\";\r\nimport {Particle} from \"babylonjs/Particles/particle\";\r\nimport SolidPoint from \"./SolidPoint\";\r\nimport {PointCloudFiltersState} from \"../../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport {PointsCloudSystem} from \"babylonjs/Particles/pointsCloudSystem\";\r\nimport calculateMinMaxOfArray from \"../../../../../utilities/math/calculateMaxMinOfArray\";\r\nimport ApiProvider from \"../../../../../services/apiProvider/ApiProvider\";\r\nimport IoC from \"../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../environment/ioc/ServiceTypes\";\r\nimport {SHOW_SNACKBAR_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport {SnackbarEvent} from \"../../../snackbar/code/SnackbarEvent\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\n\r\nexport default async function constructPointCloud(scene: Scene,\r\n                                                  points: SolidPoint[],\r\n                                                  parameterMin: number,\r\n                                                  parameterMax: number,\r\n                                                  cloudPointFilters: PointCloudFiltersState): Promise<PointsCloudSystem> {\r\n\r\n\r\n    const filteredPoints: SolidPoint[] = filterPointCloud(points,cloudPointFilters);\r\n    const pointsCloudSystem = new BABYLON.PointsCloudSystem(\"pcs\", 3, scene, {updatable: false});\r\n\r\n    const diffP = parameterMax - parameterMin;\r\n    let constructParticle = (particle: Particle, i: number, _: any) => {\r\n        let point = filteredPoints[i];\r\n        const pPercent = ((point.parameter - parameterMin) / diffP) * 100;\r\n\r\n        let r: number = 0;\r\n        let g: number = 0;\r\n        let b: number = 0;\r\n\r\n        if (pPercent <= 0) {\r\n            r = 0;\r\n            g = 0;\r\n            b = 0;\r\n        } else if (pPercent > 0 && pPercent <= 25) {\r\n            r = 255;\r\n            g = 0 - ((0 - 255) / (0 - 25)) * (0 - pPercent);\r\n            b = 0;\r\n        } else if (pPercent > 25 && pPercent <= 50) {\r\n            r = 255 - ((255 - 0) / (25 - 50)) * (25 - pPercent);\r\n            g = 255;\r\n            b = 0;\r\n        } else if (pPercent > 50 && pPercent <= 75) {\r\n            r = 0;\r\n            g = 255;\r\n            b = 0 - ((0 - 255) / (50 - 100)) * (50 - pPercent);\r\n        } else if (pPercent > 75 && pPercent <= 100) {\r\n            r = 0;\r\n            g = 255 - ((255 - 0) / (75 - 100)) * (75 - pPercent);\r\n            b = 255;\r\n        } else if (pPercent > 100) {\r\n            r = 0;\r\n            g = 0;\r\n            b = 0;\r\n        }\r\n\r\n        //particle.position = new BABYLON.Vector3((point.x - 76990) / 100, (point.y - 92383) / 100, (point.z - 525) / 10);\r\n        particle.position = new BABYLON.Vector3(point.x, point.y, point.z);\r\n        particle.color = new BABYLON.Color4(r / 255, g / 255, b / 255, 1)\r\n    }\r\n\r\n    const pointsCount = filteredPoints.length;\r\n    pointsCloudSystem.addPoints(pointsCount, constructParticle);\r\n    const mesh = await pointsCloudSystem.buildMeshAsync();\r\n    return pointsCloudSystem;\r\n}\r\n\r\nexport function setUpPointCloud(file: File, cloudPointFilters: PointCloudFiltersState) {\r\n    const reader: FileReader = new FileReader()\r\n\r\n    reader.onload = async (e: ProgressEvent<FileReader>) => {\r\n        const fileLines: string[] = [];\r\n        const text: string = <string>(reader.result)\r\n        let lines: string[] = text.split('\\n');\r\n        lines.forEach((line) => {\r\n            fileLines.push(line.slice(0, -1));\r\n        });\r\n\r\n        const points: SolidPoint[] = fileLines.map((line: string) => {\r\n            const points: string[] = line.split(';');\r\n            const x: number = Number.parseFloat(points[0] ? points[0].replace(',', '.') : \"0\");\r\n            const y: number = Number.parseFloat(points[1] ? points[1].replace(',', '.') : \"0\");\r\n            const z: number = Number.parseFloat(points[2] ? points[2].replace(',', '.') : \"0\");\r\n            const p: number = Number(points[3] ? points[3].replace(',', '.') : \"0\");\r\n\r\n            return new SolidPoint(x, y, z, p);\r\n        });\r\n\r\n        const parameters = points.map(p => p.parameter);\r\n        const {max, min} = calculateMinMaxOfArray(parameters);\r\n        const parameterMin = min;\r\n        const parameterMax = max;\r\n\r\n        const apiProvider: ApiProvider = IoC.get(Symbol.for(\"API_PROVIDER_SERVICE\"));\r\n        const scene = apiProvider.scene.scene as Scene;\r\n\r\n        const sceneRootApi = apiProvider.scene;\r\n        if (sceneRootApi.pointsCloudSystem && apiProvider.scene.pointsCloudSystem !== null) {\r\n            sceneRootApi.pointsCloudSystem.dispose()\r\n            sceneRootApi.pointsCloudSystem = null;\r\n        }\r\n\r\n        const pointsCloudSystem = await constructPointCloud(scene, points, parameterMin, parameterMax, cloudPointFilters);\r\n        const previousPcsMesh = apiProvider.scene.pointsCloudSystem?.mesh;\r\n        apiProvider.scene.pointsCloudSystem = pointsCloudSystem;\r\n\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n\r\n        if(previousPcsMesh !== pointsCloudSystem.mesh || !previousPcsMesh)\r\n            eventBus.send(SHOW_SNACKBAR_EVENT, {message: i18next.t('point_cloud_successfully_uploaded'), alertType: \"success\"} as SnackbarEvent)\r\n    };\r\n\r\n    const blob: Blob = <Blob>file;\r\n    reader.readAsText(blob);\r\n}\r\n\r\nfunction filterPointCloud(points: SolidPoint[], cloudPointFilters: PointCloudFiltersState): SolidPoint[] {\r\n    const filteredPoints = points.filter(point => {\r\n        const {x, y, z} = point\r\n\r\n        if ((x >= cloudPointFilters.filterXFromLimit && x <= cloudPointFilters.filterXToLimit)\r\n            &&\r\n            (y >= cloudPointFilters.filterYFromLimit && y <= cloudPointFilters.filterYToLimit)\r\n            &&\r\n            (z >= cloudPointFilters.filterZFromLimit && z <= cloudPointFilters.filterZToLimit)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n\r\n    return filteredPoints;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const PointCloudContainer = styled.div`\r\n    pointerEvents: \"none\";\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 61.5px;\r\n    background: transparent;\r\n    pointer-events: none;\r\n`\r\n","export enum BottomDrawerContentType{\r\n    None,\r\n    PointCloud\r\n}","import {Selector, useSelector} from \"react-redux\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport * as React from \"react\";\r\nimport {setUpPointCloud} from \"./code/constructPointCloud\";\r\nimport {\r\n    getPointCloudFiltersPanelSelector,\r\n    PointCloudFiltersState\r\n} from \"../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport {ApplicationState} from \"../../../../store/store\";\r\nimport {PointCloudContainer} from \"./style\";\r\n\r\nconst pointCloudFileSelector: Selector<ApplicationState, File | null> = state => state.ui.sections.pointCloudSection.pointsCloudFile;\r\n\r\nconst dataSelector = createSelector([getPointCloudFiltersPanelSelector, pointCloudFileSelector],\r\n    (pointCloudFilters: PointCloudFiltersState, file: File | null) => {\r\n        return {\r\n            pointCloudFilters,\r\n            file\r\n        }\r\n    })\r\n\r\nconst PointCloud = () => {\r\n    const props = useSelector(dataSelector);\r\n    const cloudPointFilters = props.pointCloudFilters\r\n    const cloudPointFile = props.file\r\n\r\n    if (cloudPointFile && cloudPointFile !== null)\r\n        setUpPointCloud(cloudPointFile, cloudPointFilters)\r\n\r\n    return (\r\n        <PointCloudContainer/>\r\n    )\r\n}\r\n\r\nexport default PointCloud","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {themeColor} from \"../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const PanelContainer = styled.section<{ theme: Theme, width: number, height: number, isActive: number }>`\r\n width: ${props => props.width}px;\r\n height: ${props => props.height}px;\r\n background: ${themeColor(ThemeColors.lightGray)};\r\n border-radius: 5px;\r\n pointer-events: auto;\r\n visibility: ${props => props.isActive ? `visible` : `hidden`};\r\n`\r\n\r\nexport const PanelHeaderContainer = styled.strong<Theme>`\r\n`\r\n\r\nexport const PanelHeader = styled.div<Theme>`\r\ncursor: move;\r\nbackground: ${themeColor(ThemeColors.darkBlue)};\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\ncolor: ${themeColor(ThemeColors.white)};\r\ntext-align: center;\r\nheight: 30px;\r\n`\r\n\r\nexport const PanelHeaderText = styled.div<Theme>`\r\nmargin-left: 8px;\r\nalign-content: center;\r\ndisplay: inline-block;\r\n`\r\n\r\nexport const PanelHeaderTypography = styled(Typography)`\r\n`;\r\n\r\nexport const PanelBodyContainer = styled.div<Theme>`\r\nmargin: 16px;\r\n`;","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const PointCloudPanelLineContainer = styled.div<Theme>`\r\nmargin-top: 12px;\r\n`\r\n\r\n","import {Theme} from \"styled-system\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {PanelBodyContainer} from \"../../shared/style\";\r\nimport {PointCloudPanelLineContainer} from \"../style\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {isNumeric} from \"rxjs/internal-compatibility\";\r\nimport {\r\n    changeXFromLimit,\r\n    changeXToLimit,\r\n    changeYFromLimit,\r\n    changeYToLimit,\r\n    changeZFromLimit,\r\n    changeZToLimit,\r\n    getPointCloudFiltersPanelSelector, PointCloudFiltersState\r\n} from \"../../../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst dataSelector = createSelector(\r\n    [getPointCloudFiltersPanelSelector],\r\n    (filter: PointCloudFiltersState) => ({\r\n        filter : filter\r\n    })\r\n)\r\n\r\nconst PointCloudPanelFilters: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const data = useSelector(dataSelector)\r\n    const filter = data.filter\r\n\r\n    return (\r\n        <PanelBodyContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    label={t('point_cloud_x_from')}\r\n                    type=\"number\"\r\n                    name={\"x-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXFromLimit}\r\n                    onChange={event => {\r\n                        const value = event.target.value;\r\n                        if (isNumeric(value))\r\n                            dispatch(changeXFromLimit(value))\r\n                    }}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_x_to')}\r\n                    type=\"number\"\r\n                    name={\"x-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXToLimit}\r\n                    onChange={event => dispatch(changeXToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_from')}\r\n                    type=\"number\"\r\n                    name={\"y-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYFromLimit}\r\n                    onChange={event => dispatch(changeYFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_to')}\r\n                    type=\"number\"\r\n                    name={\"y-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYToLimit}\r\n                    onChange={event => dispatch(changeYToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_from')}\r\n                    type=\"number\"\r\n                    name={\"z-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZFromLimit}\r\n                    onChange={event => dispatch(changeZFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_to')}\r\n                    type=\"number\"\r\n                    name={\"z-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZToLimit}\r\n                    onChange={event => dispatch(changeZToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n        </PanelBodyContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelFilters)","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Draggable from 'react-draggable';\r\nimport {\r\n    closePointCloudFiltersPanel,\r\n    pointCloudFiltersPanelActivitySelector\r\n} from \"../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    PanelContainer,\r\n    PanelHeaderContainer,\r\n    PanelHeader,\r\n    PanelHeaderText,\r\n    PanelHeaderTypography\r\n} from \"../shared/style\";\r\nimport {AppCloseIcon} from \"../../../shared/style\";\r\nimport PointCloudPanelFilters from \"./shared\";\r\n\r\nconst dataSelector = createSelector([pointCloudFiltersPanelActivitySelector], (isActive: boolean) =>\r\n    ({\r\n        isActive : isActive\r\n    })\r\n);\r\n\r\nconst PointCloudPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const data = useSelector(dataSelector)\r\n\r\n    return (\r\n        <Draggable bounds=\"parent\" handle=\"strong\" defaultPosition={{x: 16, y: 16}}>\r\n            <PanelContainer isActive={data.isActive} width={257} height={240}>\r\n                <section>\r\n                    <PanelHeaderContainer>\r\n                        <PanelHeader>\r\n                            <PanelHeaderText>\r\n                                <PanelHeaderTypography variant=\"subtitle1\">{t('point_cloud_filters')}</PanelHeaderTypography>\r\n                            </PanelHeaderText>\r\n                            <Tooltip title={t('close')}\r\n                                     style={{\r\n                                         float: \"right\"\r\n                                     }}>\r\n                                <label>\r\n                                    <IconButton\r\n                                        component=\"span\"\r\n                                        size=\"small\"\r\n                                        onClick={() => dispatch(closePointCloudFiltersPanel())}\r\n                                        color=\"primary\">\r\n                                        <AppCloseIcon/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </Tooltip>\r\n                        </PanelHeader>\r\n                    </PanelHeaderContainer>\r\n                    <PointCloudPanelFilters/>\r\n                </section>\r\n            </PanelContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const PanelsContainer = styled.div<Theme>`\r\n    position: fixed;\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n    background: transparent;\r\n    pointer-events: none;\r\n    left: 0;\r\n    top: 81px;\r\n    right: 0;     \r\n`","import * as React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanel from \"./pointCloudPanel\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {PanelsContainer} from \"./style\";\r\n\r\nconst Panels: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PanelsContainer>\r\n            <PointCloudPanel/>\r\n        </PanelsContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Panels);","import React, {Component, useState} from 'react';\r\nimport * as BABYLON from 'babylonjs';\r\nimport IoC from \"../../../../environment/ioc/IoC\";\r\nimport isCanvasSupported from \"../../../../utilities/dom/isCanvasSupported\";\r\nimport setupScene from \"./code/setupScene\";\r\nimport setupCamera from \"./code/setupCamera\";\r\nimport setupLight from \"./code/setupLight\";\r\nimport {Engine} from \"babylonjs/Engines/engine\";\r\nimport {Light} from \"babylonjs/Lights/light\";\r\nimport {ArcRotateCamera} from \"babylonjs/Cameras/arcRotateCamera\";\r\nimport setupZoom from \"./code/setupZoom\";\r\nimport ApiProvider from \"../../../../services/apiProvider/ApiProvider\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Canvas} from \"./style\";\r\nimport PointCloud from \"../pointCloudSystem\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport Panels from \"../panels\";\r\nimport 'pepjs';\r\n\r\nconst Scene: React.FC<{ theme: Theme }> = (props) => {\r\n    function initialize(canvas: HTMLCanvasElement) {\r\n        if (!isCanvasSupported()) {\r\n            console.log('canvas is not supported!');\r\n            alert('canvas is not supported!');\r\n        }\r\n        const apiProvider: ApiProvider = IoC.get(Symbol.for(\"API_PROVIDER_SERVICE\"));\r\n        const sceneAspects = apiProvider.scene;\r\n\r\n        const engine: Engine = new BABYLON.Engine(canvas, true);\r\n        sceneAspects.engine = engine;\r\n\r\n        const theme = props.theme;\r\n        const scene: BABYLON.Scene = setupScene(engine, theme);\r\n        sceneAspects.scene = scene;\r\n\r\n        const camera: ArcRotateCamera = setupCamera(canvas, scene);\r\n        sceneAspects.camera = camera;\r\n\r\n        const light: Light = setupLight(scene);\r\n        sceneAspects.light = light;\r\n\r\n        setupZoom(scene, engine, camera);\r\n    }\r\n\r\n\r\n    return (\r\n        <div onPointerDown={(e) => console.log(e)}>\r\n            <Canvas\r\n                ref={canvas => {\r\n                    if (canvas != undefined && canvas) {\r\n                        initialize(canvas);\r\n                    }\r\n                }}\r\n            />\r\n            <PointCloud/>\r\n            <Hidden smDown>\r\n                <Panels/>\r\n            </Hidden>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withTheme(Scene);\r\n","export default function isCanvasSupported() {\r\n    const elem = document.createElement('canvas');\r\n    return !!(elem.getContext && elem.getContext('2d'));\r\n}","import * as BABYLON from 'babylonjs';\r\nimport {ArcRotateCamera} from \"babylonjs/Cameras/arcRotateCamera\";\r\n\r\nexport default function setupCamera(canvas: HTMLCanvasElement, scene: BABYLON.Scene): ArcRotateCamera {\r\n    const camera: ArcRotateCamera = new BABYLON.ArcRotateCamera('Camera', 0, 0, -100, new BABYLON.Vector3(1, 2, -3), scene);\r\n\r\n    camera.setPosition(new BABYLON.Vector3(0, 0, -100));\r\n    camera.target = new BABYLON.Vector3(0, 0, 0);\r\n    camera.orthoLeft = -8;\r\n    camera.orthoRight = 8;\r\n    const ratio = canvas.height / canvas.width;\r\n    camera.orthoTop = camera.orthoRight * ratio;\r\n    camera.orthoBottom = camera.orthoLeft * ratio;\r\n\r\n    camera.attachControl(canvas, false);\r\n    camera.alpha += Math.PI; // camera +180°\r\n    //camera.attachControl(canvas, true, false, 0);\r\n    camera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n\r\n    camera.lowerRadiusLimit = camera.radius;\r\n    camera.upperRadiusLimit = camera.radius;\r\n\r\n    camera.inputs.addMouseWheel();\r\n    camera.inputs.addPointers();\r\n    return camera;\r\n}","import * as BABYLON from \"babylonjs\";\r\nimport {Light} from \"babylonjs/Lights/light\";\r\n\r\nexport default function setupLight(scene : BABYLON.Scene) : Light {\r\n    const light = new BABYLON.HemisphericLight(\"light\", new BABYLON.Vector3(0, 1, 0), scene);\r\n    light.intensity = 0.7;\r\n\r\n    return light;\r\n}","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../../theme/themeAccessors\";\r\n\r\nexport const HeaderMobilePanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.lightGray)};\r\nheight: ${appSizes(\"headerMobile\")}px;\r\nflexGrow: 1;\r\n`\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport {ListItemIcon, Theme} from \"@material-ui/core\";\r\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {withTheme} from \"styled-components\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport {\r\n    pointCloudLoadFile\r\n} from \"../../../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport {useAppDispatch} from \"../../../../../../../store/store\";\r\nimport IoC from \"../../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../../environment/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT, OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"../../bottom/code/BottomDrawerContentType\";\r\n\r\nconst PointCloudMenuItem: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [state, setState] = useState({\r\n        subMenuIsOpen: false\r\n    })\r\n    const {subMenuIsOpen} = state\r\n\r\n    const handleClick = () => {\r\n        setState({subMenuIsOpen: !subMenuIsOpen});\r\n    };\r\n\r\n    const openPanelPointCloudFiltersClickHandle = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(OPEN_BOTTOM_DRAWER_EVENT,{contentType: BottomDrawerContentType.PointCloud})\r\n        eventBus.send(CLOSE_DRAWER_EVENT,{})\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <BlurOnIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={t('point_cloud')}/>\r\n                {subMenuIsOpen ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={subMenuIsOpen} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <Fragment>\r\n                            <input\r\n                                color=\"primary\"\r\n                                type=\"file\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    const file: File = e.target.files?.[0] as File;\r\n                                    if (file && file !== undefined) {\r\n                                        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n                                        eventBus.send(CLOSE_DRAWER_EVENT,{})\r\n                                        dispatch(pointCloudLoadFile(file));\r\n                                    }\r\n                                }}\r\n                                id=\"icon-button-file\"\r\n                                style={{display: 'none'}}/>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemIcon>\r\n                                    <CloudUploadIcon/>\r\n                                </ListItemIcon>\r\n                            </label>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemText primary={t('load_file_with_point_cloud')}/>\r\n                            </label>\r\n                        </Fragment>\r\n\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <ListItemIcon\r\n                            onClick={openPanelPointCloudFiltersClickHandle}>\r\n                            <DialpadIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            onClick={openPanelPointCloudFiltersClickHandle}\r\n                            primary={t('open_panel_point_cloud_filters')}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudMenuItem)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {themeColor} from \"../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../theme/ThemeColors\";\r\n\r\nexport const DrawerContainer = styled.section<Theme>`\r\nwidth : 250px;\r\n`\r\nexport const DrawerHeader = styled.div<Theme>`\r\ndisplay: flex;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n\r\n${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: 104px;\r\n}\r\n${props => props.theme.breakpoints.down(\"sm\")} {\r\n       height: 56px;\r\n}\r\n`\r\n\r\nexport const DrawerHeaderTitle = styled(Typography)`\r\n color: ${themeColor(ThemeColors.darkBlue)};\r\n margin-right: auto;\r\n margin-left: 16px;\r\n`","import * as React from \"react\";\r\nimport IoC from \"../../../environment/ioc/IoC\";\r\nimport VersionService from \"../../../services/version/VersionService\";\r\nimport {VERSION_SERVICE} from \"../../../environment/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst loadVersion = () => {\r\n    const versionService = IoC.get<VersionService>(VERSION_SERVICE)\r\n    return versionService.GetVersion()\r\n}\r\nconst Version: React.FC<{ isDark: boolean }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const {isDark} = props\r\n    return (\r\n        <div style={{\r\n            color: isDark ? \"black\" : \"white\"\r\n        }}>     {t('version')}\r\n            : {loadVersion()}\r\n        </div>\r\n    );\r\n}\r\nexport default Version;","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport IoC from \"../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../environment/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport PointCloudMenuItem from \"./pointCloudMenuItem\";\r\nimport {DrawerContainer, DrawerHeader, DrawerHeaderTitle} from \"./style\";\r\nimport Version from \"../../../../version\";\r\n\r\ninterface DrawerPanelProps {\r\n    theme: Theme,\r\n    isOpen: boolean\r\n}\r\n\r\nconst DrawerLeftPanel: React.FC<DrawerPanelProps> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false\r\n    });\r\n    const {isOpen} = state;\r\n\r\n    useEffect(() => {\r\n            setState({isOpen: props.isOpen})\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const handleDrawerClose = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"left\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerContainer>\r\n                <DrawerHeader>\r\n                    <DrawerHeaderTitle variant=\"h5\">{t('aeroset')}</DrawerHeaderTitle>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    style={{width: '100%'}}\r\n                >\r\n                    <PointCloudMenuItem/>\r\n                </List>\r\n                <div style={{position:\"absolute\", bottom: 8, left: 8}}>\r\n                    <Version isDark={true}/>\r\n                </div>\r\n            </DrawerContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerLeftPanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const DrawerBottomContainer = styled.section<Theme>`\r\nheight : 270px;\r\nalign-content: center;\r\n`\r\nexport const DrawerBottomHeader = styled.div<Theme>`\r\ndisplay: flex;\r\nvertical-align: center;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n`\r\n\r\nexport const MobilePanelContainer = styled.div<Theme>`\r\nvisibility: ${props => {\r\n    // @ts-ignore\r\n    return (props.currentType && props.stateType && props.currentType.valueOf() === props.stateType.valueOf()) ? `visible` : `collapse`;\r\n}};\r\n\r\n`","import styled from \"styled-components\";\r\nimport {Theme} from \"styled-system\";\r\n\r\nexport const PointCloudPanelMobileContainer = styled.div<Theme>`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: center\r\n`","import React from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanelFilters from \"../shared\";\r\nimport {PointCloudPanelMobileContainer} from \"./style\";\r\n\r\nconst PointCloudPanelMobile: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PointCloudPanelMobileContainer>\r\n            <PointCloudPanelFilters/>\r\n        </PointCloudPanelMobileContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelMobile)","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DrawerBottomContainer, DrawerBottomHeader, MobilePanelContainer} from \"./style\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport IoC from \"../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../environment/ioc/ServiceTypes\";\r\nimport {OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"./code/BottomDrawerContentType\";\r\nimport {AppDivider} from \"../../../../shared/style\";\r\nimport {PanelHeader, PanelHeaderText, PanelHeaderTypography} from \"../../../panels/shared/style\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PointCloudPanelMobile from \"../../../panels/pointCloudPanel/mobile\";\r\n\r\nconst DrawerBottomPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false,\r\n        visiblePanel: BottomDrawerContentType\r\n    });\r\n    const {isOpen, visiblePanel} = state;\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n        }\r\n    }, [])\r\n\r\n    const contentChangedHandler = (events: any[]) => {\r\n        const content = events[0] as { contentType: BottomDrawerContentType }\r\n        setState({visiblePanel: content.contentType, isOpen: true})\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setState({...state, isOpen: false})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"bottom\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerBottomContainer>\r\n                <DrawerBottomHeader>\r\n                    <div style={{marginRight: \"auto\"}}>\r\n                        <Typography variant=\"h6\">\r\n                            <MobilePanelContainer currentType={BottomDrawerContentType.PointCloud}\r\n                                                  stateType={visiblePanel}>\r\n                                {t('point_cloud_filters')}\r\n                            </MobilePanelContainer>\r\n                        </Typography>\r\n                    </div>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <KeyboardArrowDownIcon onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerBottomHeader>\r\n                <AppDivider/>\r\n                <MobilePanelContainer currentType={BottomDrawerContentType.PointCloud} stateType={visiblePanel}>\r\n                    <PointCloudPanelMobile/>\r\n                </MobilePanelContainer>\r\n            </DrawerBottomContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerBottomPanel)","import React, {useEffect, useState} from \"react\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderMobilePanelContainer} from \"./style\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport DrawerLeftPanel from \"../drawer/left\";\r\nimport IoC from \"../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../environment/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport DrawerBottomPanel from \"../drawer/bottom\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst HeaderMobilePanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        drawerIsOpen: false\r\n    })\r\n\r\n    useEffect(() => {\r\n            const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n            eventBus.subscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            setState({isOpen: props.isOpen})\r\n            return () => {\r\n                eventBus.unsubscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            }\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const onCloseDrawerEvent = (_) => {\r\n        setState({drawerIsOpen: false})\r\n    }\r\n\r\n    const menuButtonClickHandle = () => {\r\n        setState({drawerIsOpen: true})\r\n    }\r\n\r\n    return (\r\n        <HeaderMobilePanelContainer>\r\n            <AppBar position=\"static\">\r\n                <Toolbar style={{background: props.theme.app.colors.main.mediumGray}}>\r\n                    <Tooltip title={t('menu')}>\r\n                        <IconButton size={\"medium\"}\r\n                                    color={\"primary\"}\r\n                                    aria-label=\"open drawer\"\r\n                                    style={{verticalAlign: \"middle\"}}\r\n                                    onClick={menuButtonClickHandle}>\r\n                            <MenuIcon style={{color: \"white\", fontSize: 35}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Typography variant=\"h6\" style={{display: \"block\", flexGrow: 1, marginLeft: 16}}>\r\n                        'Scheme name'\r\n                    </Typography>\r\n                    <Tooltip title={t('actions')}>\r\n                        <IconButton size={\"small\"}\r\n                                    color={\"primary\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <MoreVertIcon style={{color: \"white\", fontSize: 35}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={t('user_account')}>\r\n                        <IconButton size={\"small\"}\r\n                                    color={\"primary\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <AccountCircleIcon style={{color: \"white\", fontSize: 35}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DrawerLeftPanel isOpen={state.drawerIsOpen}/>\r\n            <DrawerBottomPanel/>\r\n        </HeaderMobilePanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderMobilePanel);","import {Theme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SnackbarWrapper = styled.div<Theme>`\r\nwidth: 100%;\r\nheight: 100%;\r\n`","import {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IoC from \"../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../services/eventBus/EventBusService\";\r\nimport {SHOW_NEW_VERSION_EVENT, SHOW_SNACKBAR_EVENT} from \"../../../services/eventBus/EventTypes\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../environment/ioc/ServiceTypes\";\r\nimport {SnackbarWrapper} from \"./style\";\r\nimport {SnackbarEvent} from \"./code/SnackbarEvent\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst SnackbarContainer: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n\r\n    const [snackbarState, setSnackbarState] = useState<{\r\n        open: boolean,\r\n        message: string,\r\n        alertType: string,\r\n        callback?: Function,\r\n        isVersionSnackbar: boolean\r\n    }>({\r\n        open: false,\r\n        alertType: \"success\",\r\n        message: \"\",\r\n        isVersionSnackbar: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n        eventBus.subscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n            eventBus.unsubscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n        }\r\n    }, [])\r\n\r\n    const snackbarEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            ...snackbarState,\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback\r\n        });\r\n    }\r\n\r\n    const showNewVersionEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback,\r\n            isVersionSnackbar: true\r\n        });\r\n    }\r\n\r\n    const handleCloseSnackbar = (event: object, reason: string) => {\r\n        if (reason === \"timeout\")\r\n            setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const {open, message, callback, alertType, isVersionSnackbar} = snackbarState;\r\n\r\n    const reload = () => {\r\n        location.reload();\r\n        return false;\r\n    }\r\n\r\n    const updateVersionAction = (\r\n        <Button color=\"primary\" size=\"small\" onClick={reload}>\r\n            {t('update')}\r\n        </Button>\r\n    )\r\n    return (\r\n        <SnackbarWrapper>\r\n            <Snackbar\r\n                style={{position: \"absolute\", alignContent: \"center\"}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleCloseSnackbar}\r\n                autoHideDuration={isVersionSnackbar ? null : 5000}>\r\n                <Alert onClose={handleClose}\r\n                       severity={alertType}\r\n                       style={{verticalAlign: \"middle\"}}\r\n                       closeText={t('close')}\r\n                       action={isVersionSnackbar ? updateVersionAction : null}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </SnackbarWrapper>\r\n    )\r\n}\r\nexport default withTheme(SnackbarContainer)","import React, {Suspense} from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Area} from \"./styles\";\r\nimport {Divider, Hidden, Theme} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderPanel from \"../layout/headerPanel\";\r\nimport InstrumentalPanel from \"../layout/instrumentalPanel\";\r\nimport StatePanel from \"../layout/statePanel\";\r\nimport Scene from \"../layout/scene\";\r\nimport HeaderMobilePanel from \"../layout/mobile/headerPanel\";\r\nimport SnackbarContainer from \"../snackbar\";\r\nimport {AppDividerLight} from \"../shared/style\";\r\nimport Version from \"../version\";\r\n\r\nconst App: React.FC<{ theme: Theme }> = (_) => {\r\n    return (\r\n        <SnackbarContainer>\r\n            <Hidden smDown>\r\n                <div style={{position: \"absolute\", left: 8, top: 8}}>\r\n                    <Version/>\r\n                </div>\r\n            </Hidden>\r\n            <Grid container\r\n                  spacing={0}\r\n                  alignItems=\"stretch\"\r\n                  direction={\"column\"}>\r\n                <Hidden smDown>\r\n                    <Grid item xs={12}>\r\n                        <HeaderPanel/>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <Grid item xs={12}>\r\n                        <HeaderMobilePanel/>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Grid item xs={12}>\r\n                    <AppDividerLight/>\r\n                </Grid>\r\n                <Hidden smDown>\r\n                    <Grid item xs={12}>\r\n                        <InstrumentalPanel/>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                    <Grid item xs={12}>\r\n                        <AppDividerLight/>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Grid item xs={12}>\r\n                    <Area>\r\n                        <Scene/>\r\n                    </Area>\r\n                </Grid>\r\n                <Hidden smDown>\r\n                    <Grid item xs={12}>\r\n                        <AppDividerLight/>\r\n                    </Grid>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                    <Grid item xs={12}>\r\n                        <StatePanel/>\r\n                    </Grid>\r\n                </Hidden>\r\n            </Grid>\r\n        </SnackbarContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(App);","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./internationalization/i18n\"; // import i18n (needs to be bundled ;))\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {GlobalStyle} from \"./globalStyle\";\nimport Theme from \"./views/components/theme\";\nimport App from \"./views/components/app\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport IoC from \"./environment/ioc/IoC\";\nimport {EventBusService} from \"./services/eventBus/EventBusService\";\nimport {EVENT_BUS_SERVICE, VERSION_SERVICE} from \"./environment/ioc/ServiceTypes\";\nimport {SnackbarEvent} from \"./views/components/snackbar/code/SnackbarEvent\";\nimport i18next from \"i18next\";\nimport initWorkboxRefresh from '@loopmode/cra-workbox-refresh';\nimport {checkAppUpdate} from \"./utilities/workbox/checkUpdate\";\nimport 'pepjs';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <GlobalStyle/>\n                <CssBaseline/>\n                <Theme>\n                    <Suspense fallback=\"\">\n                        <App/>\n                    </Suspense>\n                </Theme>\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nfunction renderRefreshUI(registration: any, {_}) {\n    const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\n    const event: SnackbarEvent = {\n        message: i18next.t('new_version'),\n        alertType: \"info\"\n    }\n    eventBus.send('SHOW_NEW_VERSION_EVENT', event)\n}\n\nwindow.onerror = function unhandledExceptionErrorHandler(errorMsg, url, lineNumber) {\n    return false;\n}\n\nserviceWorker.register({\n    onUpdate: (registration: any) => {\n        console.log(\"New Version\")\n        // @ts-ignore\n        return initWorkboxRefresh(registration, {render: renderRefreshUI});\n    }\n})\n"],"sourceRoot":""}
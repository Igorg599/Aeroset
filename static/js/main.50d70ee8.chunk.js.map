{"version":3,"sources":["logo.svg","3D/BabylonScene.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","CalculateMinMaxOfArray","array","arrayLength","length","arrayCounter","lastBottomBorder","lastTopBorder","minValue","maxValue","arrayPart","slice","min","Math","max","Scene3D","props","showFile","e","a","preventDefault","reader","FileReader","onload","text","target","result","split","forEach","line","value","push","points","map","x","Number","parseFloat","replace","y","z","p","parameters","parameterMin","parameterMax","SetupPcs","readAsText","files","state","filterXFromLimit","filterXToLimit","filterYFromLimit","filterYToLimit","filterZFromLimit","filterZToLimit","this","engine","BABYLON","canvas","scene","clearColor","camera","Zero","setPosition","attachControl","SetupScene","SetupCamera","ShowAxis","runRenderLoop","render","window","addEventListener","resize","size","makeTextPlane","color","dynamicTexture","hasAlpha","drawText","plane","CreatePlane","material","backFaceCulling","specularColor","diffuseTexture","CreateLines","position","pointsCloudSystem","diffP","filteredPoints","filter","constructParticle","particle","i","_","r","g","b","point","pPercent","addPoints","buildMeshAsync","event","inputType","name","constructNewFilteredPCS","undefined","dispose","setState","prevState","style","width","innerWidth","height","innerHeight","ref","FiltersContainer","top","left","Button","disableElevation","variant","startIcon","marginBottom","component","type","input","inputElement","onChange","display","Typography","marginTop","TextField","id","label","step","InputOnChangeHandle","bind","InputLabelProps","shrink","inputProps","marginLeft","Component","styled","Card","background","App","className","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.50d70ee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\nimport * as BABYLON from 'babylonjs';\r\nimport styled from 'styled-components';\r\nimport Card from '@material-ui/core/Card';\r\nimport {createMuiTheme} from '@material-ui/core/styles';\r\nimport {\r\n    withStyles,\r\n    MuiThemeProvider\r\n} from \"@material-ui/core/styles\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#757ce8',\r\n            main: '#3f50b5',\r\n            dark: '#002884',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ff7961',\r\n            main: '#f44336',\r\n            dark: '#ba000d',\r\n            contrastText: '#000',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nfunction CalculateMinMaxOfArray(array) {\r\n    const arrayLength = array.length;\r\n    const borderIncrement = 125000;\r\n    let arrayCounter = 0;\r\n    let lastBottomBorder = 0;\r\n    let lastTopBorder = borderIncrement;\r\n    let minValue = 0;\r\n    let maxValue = 0;\r\n\r\n    while (true) {\r\n        const arrayPart = array.slice(lastBottomBorder, lastTopBorder)\r\n\r\n        let min = Math.min(...arrayPart);\r\n        let max = Math.max(...arrayPart);\r\n\r\n        minValue = min < minValue ? min : minValue;\r\n        maxValue = max > maxValue ? max : maxValue;\r\n\r\n        lastBottomBorder += borderIncrement;\r\n        lastTopBorder += borderIncrement;\r\n        arrayCounter += arrayPart.length;\r\n\r\n        if (arrayCounter >= arrayLength)\r\n            break;\r\n    }\r\n\r\n    return {min: minValue, max: maxValue};\r\n}\r\n\r\n\r\nclass Scene3D extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterXFromLimit: -5,\r\n            filterXToLimit: 5,\r\n            filterYFromLimit: -5,\r\n            filterYToLimit: 5,\r\n            filterZFromLimit: -5,\r\n            filterZToLimit: 5\r\n        };\r\n    }\r\n\r\n    SetupScene() {\r\n        this.engine = new BABYLON.Engine(this.canvas, true);\r\n        this.scene = new BABYLON.Scene(this.engine);\r\n        this.scene.clearColor = new BABYLON.Color3(27 / 255, 150 / 255, 243 / 255);\r\n    }\r\n\r\n    SetupCamera() {\r\n        let camera = new BABYLON.ArcRotateCamera(\"Camera\", 0, 0, 0, BABYLON.Vector3.Zero(), this.scene);\r\n        camera.setPosition(new BABYLON.Vector3(0, 0, 20));\r\n        camera.attachControl(this.canvas, true);\r\n    }\r\n\r\n    showFile = async (e) => {\r\n        e.preventDefault()\r\n        const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n            const array = [];\r\n            const text = (e.target.result)\r\n            let lines = text.split('\\n');\r\n            lines.forEach((line) => {\r\n                let value = line.split(';');\r\n                array.push(value);\r\n            });\r\n\r\n            this.points = array.map((e) => {\r\n                return {\r\n                    x: Number.parseFloat(e[0] ? e[0].replace(',', '.') : 0),\r\n                    y: Number.parseFloat(e[1] ? e[1].replace(',', '.') : 0),\r\n                    z: Number.parseFloat(e[2] ? e[2].replace(',', '.') : 0),\r\n                    p: new Number(e[3] ? e[3].replace(',', '.') : 0)\r\n                }\r\n            });\r\n\r\n            const parameters = this.points.map(p => p.p);\r\n            const {max, min} = CalculateMinMaxOfArray(parameters);\r\n            this.parameterMin = min;\r\n            this.parameterMax = max;\r\n\r\n            await this.SetupPcs(this.points);\r\n        };\r\n        reader.readAsText(e.target.files[0])\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.SetupScene();\r\n        this.SetupCamera();\r\n        this.ShowAxis(5);\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            this.engine.resize();\r\n        });\r\n    }\r\n\r\n    ShowAxis(size) {\r\n        const makeTextPlane = function (text, color, size, scene) {\r\n            const dynamicTexture = new BABYLON.DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n            dynamicTexture.hasAlpha = true;\r\n            dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\r\n            const plane = new BABYLON.Mesh.CreatePlane(\"TextPlane\", size, scene, true);\r\n            plane.material = new BABYLON.StandardMaterial(\"TextPlaneMaterial\", scene);\r\n            plane.material.backFaceCulling = false;\r\n            plane.material.specularColor = new BABYLON.Color3(0, 0, 0);\r\n            plane.material.diffuseTexture = dynamicTexture;\r\n            return plane;\r\n        };\r\n\r\n        const axisX = BABYLON.Mesh.CreateLines(\"axisX\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, 0.05 * size, 0),\r\n            new BABYLON.Vector3(size, 0, 0), new BABYLON.Vector3(size * 0.95, -0.05 * size, 0)\r\n        ], this.scene);\r\n        axisX.color = new BABYLON.Color3(1, 0, 0);\r\n        const xChar = makeTextPlane(\"X\", \"red\", size / 10, this.scene);\r\n        xChar.position = new BABYLON.Vector3(0.9 * size, -0.05 * size, 0);\r\n        const axisY = BABYLON.Mesh.CreateLines(\"axisY\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(-0.05 * size, size * 0.95, 0),\r\n            new BABYLON.Vector3(0, size, 0), new BABYLON.Vector3(0.05 * size, size * 0.95, 0)\r\n        ], this.scene);\r\n        axisY.color = new BABYLON.Color3(0, 1, 0);\r\n        const yChar = makeTextPlane(\"Y\", \"green\", size / 10, this.scene);\r\n        yChar.position = new BABYLON.Vector3(0, 0.9 * size, -0.05 * size);\r\n        const axisZ = BABYLON.Mesh.CreateLines(\"axisZ\", [\r\n            new BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, -0.05 * size, size * 0.95),\r\n            new BABYLON.Vector3(0, 0, size), new BABYLON.Vector3(0, 0.05 * size, size * 0.95)\r\n        ], this.scene);\r\n        axisZ.color = new BABYLON.Color3(0, 0, 1);\r\n        const zChar = makeTextPlane(\"Z\", \"blue\", size / 10, this.scene);\r\n        zChar.position = new BABYLON.Vector3(0, 0.05 * size, 0.9 * size);\r\n    };\r\n\r\n    async SetupPcs(points) {\r\n        this.pointsCloudSystem = new BABYLON.PointsCloudSystem(\"pcs\", this.scene);\r\n        const diffP = this.parameterMax - this.parameterMin;\r\n\r\n        const filteredPoints = points.filter(p => {\r\n            const {x, y, z} = p\r\n\r\n            if ((x >= this.state.filterXFromLimit && x <= this.state.filterXToLimit)\r\n                &&\r\n                (y >= this.state.filterYFromLimit && y <= this.state.filterYToLimit)\r\n                &&\r\n                (z >= this.state.filterZFromLimit && z <= this.state.filterZToLimit)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        let constructParticle = (particle, i, _) => {\r\n            let point = filteredPoints[i];\r\n            const pPercent = ((point.p - this.parameterMin) / diffP) * 100;\r\n\r\n            let r;\r\n            let g;\r\n            let b;\r\n\r\n            if (pPercent <= 0) {\r\n                r = 0;\r\n                g = 0;\r\n                b = 0;\r\n            } else if (pPercent > 0 && pPercent <= 25) {\r\n                r = 255;\r\n                g = 0 - ((0 - 255) / (0 - 25)) * (0 - pPercent);\r\n                b = 0;\r\n            } else if (pPercent > 25 && pPercent <= 50) {\r\n                r = 255 - ((255 - 0) / (25 - 50)) * (25 - pPercent);\r\n                g = 255;\r\n                b = 0;\r\n            } else if (pPercent > 50 && pPercent <= 75) {\r\n                r = 0;\r\n                g = 255;\r\n                b = 0 - ((0 - 255) / (50 - 100)) * (50 - pPercent);\r\n            } else if (pPercent > 75 && pPercent <= 100) {\r\n                r = 0;\r\n                g = 255 - ((255 - 0) / (75 - 100)) * (75 - pPercent);\r\n                b = 255;\r\n            } else if (pPercent > 100) {\r\n                r = 0;\r\n                g = 0;\r\n                b = 0;\r\n            }\r\n\r\n            particle.position = new BABYLON.Vector3(point.x, point.y, point.z);\r\n            particle.color = new BABYLON.Color3(r / 255, g / 255, b / 255)\r\n        }\r\n\r\n        this.pointsCloudSystem.addPoints(filteredPoints.length, constructParticle);\r\n        await this.pointsCloudSystem.buildMeshAsync();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    InputOnChangeHandle(event) {\r\n        const target = event.target;\r\n        const inputType = target.name;\r\n        const value = target.value;\r\n\r\n        const constructNewFilteredPCS = async () => {\r\n            if (this.pointsCloudSystem !== undefined) {\r\n                this.pointsCloudSystem.dispose();\r\n            }\r\n\r\n            if (typeof this.points !== 'undefined' && this.points)\r\n                await this.SetupPcs(this.points);\r\n        }\r\n\r\n        if (inputType === \"x-from\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: value,\r\n                filterXToLimit: prevState.filterXToLimit,\r\n                filterYFromLimit: prevState.filterYFromLimit,\r\n                filterYToLimit: prevState.filterYToLimit,\r\n                filterZFromLimit: prevState.filterZFromLimit,\r\n                filterZToLimit: prevState.filterZToLimit,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n\r\n        } else if (inputType === \"x-to\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: prevState.filterXFromLimit,\r\n                filterXToLimit: value,\r\n                filterYFromLimit: prevState.filterYFromLimit,\r\n                filterYToLimit: prevState.filterYToLimit,\r\n                filterZFromLimit: prevState.filterZFromLimit,\r\n                filterZToLimit: prevState.filterZToLimit,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n        } else if (inputType === \"y-from\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: prevState.filterXFromLimit,\r\n                filterXToLimit: prevState.filterXToLimit,\r\n                filterYFromLimit: value,\r\n                filterYToLimit: prevState.filterYToLimit,\r\n                filterZFromLimit: prevState.filterZFromLimit,\r\n                filterZToLimit: prevState.filterZToLimit,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n        } else if (inputType === \"y-to\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: prevState.filterXFromLimit,\r\n                filterXToLimit: prevState.filterXToLimit,\r\n                filterYFromLimit: prevState.filterYFromLimit,\r\n                filterYToLimit: value,\r\n                filterZFromLimit: prevState.filterZFromLimit,\r\n                filterZToLimit: prevState.filterZToLimit,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n        } else if (inputType === \"z-from\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: prevState.filterXFromLimit,\r\n                filterXToLimit: prevState.filterXToLimit,\r\n                filterYFromLimit: prevState.filterYFromLimit,\r\n                filterYToLimit: prevState.filterYToLimit,\r\n                filterZFromLimit: value,\r\n                filterZToLimit: prevState.filterZToLimit,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n        } else if (inputType === \"z-to\") {\r\n            this.setState(prevState => ({\r\n                filterXFromLimit: prevState.filterXFromLimit,\r\n                filterXToLimit: prevState.filterXToLimit,\r\n                filterYFromLimit: prevState.filterYFromLimit,\r\n                filterYToLimit: prevState.filterYToLimit,\r\n                filterZFromLimit: prevState.filterZFromLimit,\r\n                filterZToLimit: value,\r\n            }), () => {\r\n                constructNewFilteredPCS();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div>\r\n                    <canvas\r\n                        style={{width: window.innerWidth, height: window.innerHeight, position: \"relative\"}}\r\n                        ref={canvas => {\r\n                            if (canvas != null)\r\n                                this.canvas = canvas;\r\n                        }}\r\n                    />\r\n                    <FiltersContainer style={{top: 20, left: 20}}>\r\n                        <Button\r\n                            disableElevation\r\n                            variant=\"outlined\"\r\n                            startIcon={<CloudUploadIcon/>}\r\n                            style={{marginBottom: 24}}\r\n                            component=\"label\"\r\n                            color=\"primary\">\r\n                            Upload File\r\n                            <input\r\n                                type=\"file\"\r\n                                ref={input => this.inputElement = input}\r\n                                onChange={(e) => this.showFile(e)}\r\n                                style={{display: \"none\"}}\r\n                            />\r\n                        </Button>\r\n                        <Typography variant=\"h5\">FILTERS</Typography>\r\n                        <div style={{marginTop: 16}}>\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"X FROM\"\r\n                                type=\"number\"\r\n                                name={\"x-from\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterXFromLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, height: 20}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"X TO\"\r\n                                type=\"number\"\r\n                                name={\"x-to\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterXToLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, marginLeft: 24}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"/>\r\n                        </div>\r\n                        <div style={{marginTop: 12}}>\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"Y FROM\"\r\n                                type=\"number\"\r\n                                name={\"y-from\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterYFromLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, height: 20}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"Y TO\"\r\n                                type=\"number\"\r\n                                name={\"y-to\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterYToLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, marginLeft: 24}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"/>\r\n                        </div>\r\n                        <div style={{marginTop: 12}}>\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"Z FROM\"\r\n                                type=\"number\"\r\n                                name={\"z-from\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterZFromLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, height: 20}}\r\n                                InputLabelProps={{\r\n                                    shrink: true\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <TextField\r\n                                id=\"outlined-number\"\r\n                                label=\"Z TO\"\r\n                                type=\"number\"\r\n                                name={\"z-to\"}\r\n                                step=\"0.1\"\r\n                                value={this.state.filterZToLimit}\r\n                                onChange={this.InputOnChangeHandle.bind(this)}\r\n                                style={{width: 100, marginLeft: 24}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    step: 0.1\r\n                                }}\r\n                                variant=\"outlined\"/>\r\n                        </div>\r\n                    </FiltersContainer>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst FiltersContainer = styled(Card)`\r\n padding: 4em;\r\n background: ${theme.palette.background};\r\n width: 250px; \r\n height: 320px;\r\n position: absolute;\r\n `;\r\n\r\nexport default Scene3D;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Scene3D from \"./3D/BabylonScene\";\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <Scene3D/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
{"version":3,"sources":["workers/pointCloud/filterPointCloud.worker.ts","webpack:///./src/workers/pointCloud/filterPointCloud.worker.ts?985c","internationalization/i18n.ts","serviceWorker.js","store/ui/sections/pointCloudSection/pointCloudSection.ts","store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel.ts","store/store.ts","store/rootReducer.ts","store/ui/uiReducer.ts","store/ui/sections/uiSectionsReducer.ts","store/ui/panels/uiPanelsReducer.ts","store/loadState.ts","globalStyle.ts","views/components/theme/defaultAppThemeValues.ts","views/components/theme/theme.ts","views/components/theme/createAppTheme.ts","views/components/theme/ThemeColors.ts","views/components/theme/index.tsx","views/components/theme/themeAccessors.ts","views/components/app/styles.ts","views/components/layout/headerPanel/style.ts","views/components/shared/icons.ts","views/components/layout/headerPanel/index.tsx","views/components/layout/sections/pointCloud/index.tsx","views/components/layout/instrumentalPanel/style.ts","views/components/shared/style.ts","views/components/layout/instrumentalPanel/index.tsx","utilities/dom/isCanvasSupported.ts","views/components/layout/scene/style.ts","views/components/layout/pointCloudSystem/style.ts","services/eventBus/EventBus.ts","views/components/layout/scene/code/SceneAspects.ts","services/apiProvider/ApiProvider.ts","environment/ioc/ServiceTypes.ts","services/version/VersionService.ts","environment/ioc/IoC.ts","services/eventBus/EventTypes.ts","views/components/layout/pointCloudSystem/code/setupPointCloud.ts","views/components/layout/pointCloudSystem/index.tsx","views/components/layout/panels/shared/style.ts","views/components/layout/panels/pointCloudPanel/style.ts","views/components/layout/panels/pointCloudPanel/shared/index.tsx","views/components/layout/panels/pointCloudPanel/index.tsx","views/components/layout/panels/style.ts","views/components/layout/panels/index.tsx","utilities/color/hexToRgb.ts","views/components/layout/scene/code/setupScene.ts","views/components/layout/scene/code/setupAxis.ts","views/components/layout/scene/code/setupCamera.ts","views/components/layout/scene/code/setupLight.ts","views/components/layout/scene/code/setupZoom.ts","views/components/layout/mobile/drawer/bottom/code/BottomDrawerContentType.ts","views/components/layout/pointCloudSystem/code/SolidPoint.ts","views/components/layout/scheme/index.tsx","views/components/layout/scene/index.tsx","views/components/layout/mobile/headerPanel/style.ts","views/components/layout/mobile/drawer/left/pointCloudMenuItem/index.tsx","views/components/layout/mobile/drawer/left/style.ts","views/components/version/index.tsx","views/components/layout/mobile/drawer/left/index.tsx","views/components/layout/mobile/drawer/bottom/style.ts","views/components/layout/panels/pointCloudPanel/mobile/style.ts","views/components/layout/panels/pointCloudPanel/mobile/index.tsx","views/components/layout/mobile/drawer/bottom/index.tsx","views/components/layout/mobile/headerPanel/index.tsx","views/components/snackbar/style.ts","views/components/snackbar/index.tsx","views/components/app/index.tsx","views/components/backdrop/index.tsx","index.tsx"],"names":["module","exports","wrap","__esModule","Worker","i18n","use","Backend","initReactI18next","init","fallbackLng","initImmediate","lng","debug","interpolation","escapeValue","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","slice","createSlice","name","initialState","isActive","pointsCloudFile","reducers","pointCloudLoadFile","action","update","$set","payload","showPointCloudFiltersPanel","closePointCloudFiltersPanel","actions","reducer","filterXFromLimit","filterXToLimit","filterYFromLimit","filterYToLimit","filterZFromLimit","filterZToLimit","changeXFromLimit","changeXToLimit","changeYFromLimit","changeYToLimit","changeZFromLimit","changeZToLimit","getPointCloudFiltersPanelSelector","ui","panels","pointCloudFiltersPanel","store","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","combineReducers","sections","pointCloudSection","pointCloudSectionReducer","preloadedState","middleware","logger","devTools","process","useAppDispatch","useDispatch","GlobalStyle","createGlobalStyle","normalize","defaultAppThemeValues","app","colors","main","white","lightGray","lightGraySecond","mediumGray","darkGray","lightBlue","mediumBlue","darkBlue","lightGreen","palette","black","gray","blue1","dark","light","medium","blue2","blue3","green","orange","purple1","purple2","red","yellow","font","sizes","header","headerMobile","instrumentalPanel","footer","lang","options","ThemeColors","theme","createMuiTheme","Theme","children","StylesProvider","injectFirst","getTheme","keys","props","path","themeColor","key","appSizes","Area","styled","breakpoints","down","HeaderPanelContainer","div","OpenPointCloudFiltersIcon","DialpadIcon","ClearPointCloudIcon","BlurOffIcon","AppCloseIcon","CloseIcon","ArrowCloseLeft","ChevronLeftIcon","PointCloudIcon","BlurOnIcon","AppExpandLess","ExpandLess","AppExpandMore","ExpandMore","AppPublishIcon","PublishIcon","up","AppListItemIcon","ListItemIcon","AppMenuIcon","MenuIcon","AppMoreVertIcon","MoreVertIcon","AppUserAccountIcon","AccountCircleIcon","withTheme","_","t","useTranslation","Tooltip","title","IconButton","size","color","style","marginLeft","dispatch","type","onChange","e","preventDefault","file","target","files","undefined","id","display","htmlFor","component","onClick","verticalAlign","Panel","AppDivider","Divider","AppDividerLight","AppDividerBold","orientation","isCanvasSupported","elem","document","createElement","getContext","Canvas","canvas","PointCloudContainer","EventBus","injectable","eventEmitter","EventEmitter","event","this","listeners","map","f","includes","addListener","removeListener","value","emit","SceneAspects","_engine","_scene","_camera","_light","_pointsCloudSystem","ApiProvider","API_PROVIDER_SERVICE","Symbol","for","EVENT_BUS_SERVICE","VERSION_SERVICE","VersionService","Initialize","year","moment","currentMonth","month","_version","build","IoC","Container","autoBindInjectable","defaultScope","skipBaseClassChecks","bind","to","inSingletonScope","SHOW_SNACKBAR_EVENT","SHOW_NEW_VERSION_EVENT","CLOSE_DRAWER_EVENT","OPEN_BOTTOM_DRAWER_EVENT","SHOW_BACKDROP_EVENT","CLOSE_BACKDROP_EVENT","setUpPointCloud","cloudPointFilters","scene","reader","FileReader","onload","a","fileText","result","pointsCloudSystem","PointsCloudSystem","updatable","filterPointCloudAsync","pointCloudState","constructParticle","particle","i","vector","position","Vector3","x","y","z","Color4","r","g","b","pointsLength","length","addPoints","buildMeshAsync","eventBus","get","message","i18next","alertType","send","blob","readAsText","dataSelector","createSelector","pointCloudFilters","PointCloud","useSelector","cloudPointFile","apiProvider","initialize","PanelContainer","section","width","height","PanelHeaderContainer","strong","PanelHeader","PanelHeaderText","PanelHeaderTypography","Typography","PanelBodyContainer","PointCloudPanelLineContainer","filter","TextField","label","step","isNumeric","InputLabelProps","shrink","inputProps","variant","data","bounds","handle","defaultPosition","float","PanelsContainer","engine","bgColor","Scene","hex","replace","m","exec","parseInt","hexToRgb","clearColor","sceneBase","makeTextPlane","text","dynamicTexture","DynamicTexture","hasAlpha","drawText","plane","mesh","CreatePlane","standardMaterial","StandardMaterial","specularColor","Color3","diffuseTexture","material","backFaceCulling","Mesh","CreateLines","Zero","setupAxis","runRenderLoop","render","onresize","resize","setupCamera","camera","ArcRotateCamera","setPosition","orthoLeft","orthoRight","ratio","orthoTop","orthoBottom","attachControl","alpha","Math","PI","mode","Camera","ORTHOGRAPHIC_CAMERA","wheelPrecision","pinchPrecision","minZ","maxZ","lowerRadiusLimit","radius","upperRadiusLimit","HemisphericLight","intensity","totalZoom","zoomTarget","setupZoom","onPointerObservable","add","eventData","deltaValue","delta","max","min","zoom2DView","CanvasZoom","wheelDelta","detail","deltaY","PointerEventTypes","POINTERWHEEL","Unproject","pointerX","pointerY","getRenderWidth","getRenderHeight","getWorldMatrix","getViewMatrix","getProjectionMatrix","POINTERMOVE","BottomDrawerContentType","totalX","abs","totalY","aspectRatio","panningSensibility","SolidPoint","parameter","_x","_y","_z","_parameter","alert","sceneAspects","Engine","setupScene","setupLight","ref","Hidden","smDown","HeaderMobilePanelContainer","useState","subMenuIsOpen","setState","openPanelPointCloudFiltersClickHandle","contentType","btnColor","Fragment","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","paddingLeft","DrawerContainer","DrawerHeader","spacing","DrawerHeaderTitle","Version","isDark","GetVersion","isOpen","useEffect","handleDrawerClose","Drawer","anchor","open","onClose","aria-labelledby","bottom","left","DrawerBottomContainer","DrawerBottomHeader","MobilePanelContainer","currentType","stateType","valueOf","PointCloudPanelMobileContainer","visiblePanel","subscribe","contentChangedHandler","unsubscribe","events","content","marginRight","drawerIsOpen","onCloseDrawerEvent","AppBar","Toolbar","background","aria-label","flexGrow","SnackbarWrapper","isVersionSnackbar","snackbarState","setSnackbarState","snackbarEventHandler","showNewVersionEventHandler","callback","updateVersionAction","Button","reload","Snackbar","alignContent","anchorOrigin","vertical","horizontal","reason","autoHideDuration","Alert","severity","closeText","top","Grid","container","alignItems","direction","item","xs","mdUp","useStyles","makeStyles","backdrop","zIndex","drawer","classes","backdropState","setBackdropState","backdropEventHandler","eventMessage","closeBackdropEventHandler","innerTheme","purple","secondary","Backdrop","className","CircularProgress","renderRefreshUI","ReactDOM","CssBaseline","fallback","getElementById","onerror","errorMsg","url","lineNumber","URL","href","origin","addEventListener","fetch","headers","response","status","indexOf","ready","unregister","checkValidServiceWorker","initWorkboxRefresh"],"mappings":"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","file":"static/js/main.d56024e2.chunk.js","sourcesContent":["module.exports = require('comlink').wrap(require(\"!worker-loader?{}!C:/Users/nsaytarov/WebstormProjects/mi-new-aeroset/node_modules/comlink-loader/dist/comlink-worker-loader.js!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\mi-new-aeroset\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js??ref--5-oneOf-0-1!C:\\\\Users\\\\nsaytarov\\\\WebstormProjects\\\\mi-new-aeroset\\\\src\\\\workers\\\\pointCloud\\\\filterPointCloud.worker.ts\")());module.exports.__esModule = true;","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"3e2d5223a82fa271df7b.worker.js\");\n};","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        initImmediate : false,\r\n        lng: \"ru\",\r\n        debug: true,\r\n        interpolation: {\r\n            escapeValue: false,\r\n        }\r\n    });\r\n\r\nexport default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n      console.log(swUrl)\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createSlice, PayloadAction, createEntityAdapter, Selector} from \"@reduxjs/toolkit\";\r\nimport {SectionState} from \"../base/SectionState\";\r\nimport update from \"immutability-helper\";\r\nimport {ApplicationState} from \"../../../store\";\r\n\r\nexport interface PointCloudSectionState extends SectionState {\r\n    pointsCloudFile: File | null;\r\n}\r\n\r\nconst defaultState: PointCloudSectionState = {\r\n    isActive: false,\r\n    pointsCloudFile: null,\r\n}\r\n\r\n//Todo: remake using Immer\r\nconst slice = createSlice({\r\n    name: \"pointCloudSection\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        pointCloudLoadFile(state: PointCloudSectionState, action: PayloadAction<File>) {\r\n            return update(state, {\r\n                pointsCloudFile: {$set: action.payload}\r\n            });\r\n        },\r\n        showPointCloudFiltersPanel(state: PointCloudSectionState) {\r\n            return update(state, {\r\n                isActive: {$set: true}\r\n            });\r\n        },\r\n        closePointCloudFiltersPanel(state: PointCloudSectionState) {\r\n            return update(state, {\r\n                isActive: {$set: false}\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nexport const pointCloudFiltersPanelActivitySelector: Selector<ApplicationState, boolean> =\r\n    state => state.ui.sections.pointCloudSection.isActive;\r\n\r\nconst {actions, reducer} = slice;\r\nexport const {pointCloudLoadFile, showPointCloudFiltersPanel, closePointCloudFiltersPanel} = actions;\r\nexport default reducer;","import {createSlice, Selector} from \"@reduxjs/toolkit\";\r\nimport {ApplicationState} from \"../../../store\";\r\nimport update from \"immutability-helper\";\r\n\r\nexport interface PointCloudFiltersState {\r\n    filterXFromLimit: number,\r\n    filterXToLimit: number,\r\n    filterYFromLimit: number,\r\n    filterYToLimit: number,\r\n    filterZFromLimit: number,\r\n    filterZToLimit: number,\r\n};\r\n\r\nconst defaultState: PointCloudFiltersState = {\r\n    filterXFromLimit: -100,\r\n    filterXToLimit: 100,\r\n    filterYFromLimit: -100,\r\n    filterYToLimit: 100,\r\n    filterZFromLimit: -100,\r\n    filterZToLimit: 100\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"pointCloudFiltersPanel\",\r\n    initialState: defaultState,\r\n    reducers: {\r\n        changeXFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterXFromLimit: {$set: action.payload}\r\n            }),\r\n        changeXToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterXToLimit: {$set: action.payload}\r\n            }),\r\n        changeYFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterYFromLimit: {$set: action.payload}\r\n            }),\r\n        changeYToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterYToLimit: {$set: action.payload}\r\n            }),\r\n        changeZFromLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterZFromLimit: {$set: action.payload}\r\n            }),\r\n        changeZToLimit: (state: PointCloudFiltersState, action) =>\r\n            update(state, {\r\n                filterZToLimit: {$set: action.payload}\r\n            })\r\n    }\r\n});\r\n\r\nexport const getPointCloudFiltersPanelSelector: Selector<ApplicationState, PointCloudFiltersState> =\r\n    state => state.ui.panels.pointCloudFiltersPanel;\r\n\r\nconst {actions, reducer} = slice\r\nexport const {changeXFromLimit, changeXToLimit, changeYFromLimit, changeYToLimit, changeZFromLimit, changeZToLimit} = actions\r\nconst pointCloudFiltersPanel = reducer\r\nexport default pointCloudFiltersPanel","import rootReducer from './rootReducer'\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport loadState from \"./loadState\";\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk';\r\nimport {useDispatch} from \"react-redux\";\r\nimport logger from 'redux-logger';\r\n\r\nexport const composeEnhancers =\r\n    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer(),\r\n    preloadedState: loadState(),\r\n    middleware: [logger],\r\n    devTools: process.env.NODE_ENV !== 'production'\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type ApplicationState = ReturnType<typeof store.getState>;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();","import {combineReducers} from 'redux'\r\nimport uiReducer from \"./ui/uiReducer\";\r\n\r\nexport default function rootReducer() {\r\n    return combineReducers({\r\n        ui: uiReducer(),\r\n    });\r\n};","import {combineReducers} from \"redux\";\r\nimport uiSectionsReducer from \"./sections/uiSectionsReducer\";\r\nimport uiPanelReducer from \"./panels/uiPanelsReducer\";\r\n\r\nexport default function uiReducer() {\r\n    return combineReducers({\r\n            sections: uiSectionsReducer(),\r\n            panels: uiPanelReducer()\r\n        }\r\n    )\r\n}","import {combineReducers} from \"redux\";\r\nimport {default as pointCloudSectionReducer} from \"./pointCloudSection/pointCloudSection\";\r\n\r\nexport default function uiSectionsReducer() {\r\n    return combineReducers({\r\n        pointCloudSection: pointCloudSectionReducer\r\n    })\r\n}","import {combineReducers} from \"redux\";\r\nimport pointCloudFiltersPanel from \"./pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\n\r\nexport default function uiPanelReducer() {\r\n    return combineReducers({\r\n        pointCloudFiltersPanel: pointCloudFiltersPanel\r\n    })\r\n}","//Todo: load state from database\r\nexport default function loadState() {\r\n    return {};\r\n}","import {createGlobalStyle} from 'styled-components'\r\nimport {normalize} from 'styled-normalize'\r\n\r\n// noinspection Stylelint\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize};\r\n  \r\n   html, body {\r\n    padding: 0;\r\n    margin: 0;\r\n    height: 100%;\r\n    min-height: 100%;\r\n    min-width: 100%;\r\n    width: 100%;\r\n    font-family: 'Roboto', 'Segoe UI',sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    overflow:hidden;\r\n    box-sizing: border-box;\r\n    *, *:before, *:after {\r\n    box-sizing: inherit;\r\n    touch-action: none;\r\n    -ms-touch-action: none;\r\n    }\r\n  }\r\n\r\n  code {\r\n    font-family: source-code-pro, monospace;\r\n  }\r\n`","export const defaultAppThemeValues = {\r\n    app: {\r\n        colors: {\r\n            main: {\r\n                white: \"#ffffff\",\r\n                lightGray: \"#f7f7f7\",\r\n                lightGraySecond: \"#D3D3D3\",\r\n                mediumGray: \"#969696\",\r\n                darkGray: \"#363835\",\r\n                lightBlue: \"#bee7f1\",\r\n                mediumBlue: \"#7dd0e4\",\r\n                darkBlue: \"#137cbf\",\r\n                lightGreen: \"\",\r\n            },\r\n            palette: {\r\n                white: \"#ffffff\",\r\n                black: \"\",\r\n                gray: \"\",\r\n                blue1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                blue3: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                green: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                orange: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple1: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                purple2: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                red: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                },\r\n                yellow: {\r\n                    dark: \"\",\r\n                    light: \"\",\r\n                    medium: \"\"\r\n                }\r\n            }\r\n        },\r\n        font: \"Roboto\",\r\n        sizes: {\r\n            header : 48,\r\n            headerMobile: 56,\r\n            instrumentalPanel : 32,\r\n            footer : 0,\r\n        },\r\n        lang : \"ru\"\r\n\r\n    }\r\n};","import {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\nimport createAppTheme from \"./createAppTheme\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\nconst theme: Theme = createAppTheme({\r\n    ...defaultAppThemeValues\r\n})\r\nexport default theme;","import {createMuiTheme, Theme, ThemeOptions} from \"@material-ui/core\";\r\nimport {defaultAppThemeValues} from \"./defaultAppThemeValues\";\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n    interface Theme {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    lightGraySecond: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                    lightGreen: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile:number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n\r\n    interface ThemeOptions {\r\n        app: {\r\n            colors: {\r\n                main: {\r\n                    white: string,\r\n                    lightGray: string,\r\n                    lightGraySecond: string,\r\n                    mediumGray: string,\r\n                    darkGray: string,\r\n                    lightBlue: string,\r\n                    mediumBlue: string,\r\n                    darkBlue: string,\r\n                    lightGreen: string,\r\n                },\r\n                palette: {\r\n                    black: string,\r\n                    gray: string,\r\n                    white: string,\r\n                    red: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    orange: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    yellow: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    green: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    blue3: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple1: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    },\r\n                    purple2: {\r\n                        light: string,\r\n                        medium: string,\r\n                        dark: string,\r\n                    }\r\n                }\r\n            },\r\n            font: string,\r\n            sizes: {\r\n                header : number,\r\n                headerMobile: number,\r\n                instrumentalPanel : number,\r\n                footer : number\r\n            },\r\n            lang : string\r\n        }\r\n    }\r\n}\r\n\r\nexport default function createAppTheme(options: ThemeOptions) : Theme {\r\n    return createMuiTheme({\r\n        ...options,\r\n        ...defaultAppThemeValues\r\n    })\r\n}\r\n","export enum ThemeColors {\r\n    white,\r\n    lightGray,\r\n    lightGraySecond,\r\n    mediumGray,\r\n    darkGray,\r\n    lightBlue,\r\n    mediumBlue,\r\n    darkBlue,\r\n    lightGreen,\r\n}","import {MuiThemeProvider, StylesProvider} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\n// @ts-ignore\r\nconst Theme = ({children}) => (\r\n    <StylesProvider injectFirst>\r\n        <MuiThemeProvider theme={theme}>\r\n            <ThemeProvider theme={theme}>\r\n                {children}\r\n            </ThemeProvider>\r\n        </MuiThemeProvider>\r\n    </StylesProvider>\r\n);\r\n\r\nexport default Theme","import {path} from \"ramda\";\r\nimport {ThemeColors} from \"./ThemeColors\";\r\n\r\n// @ts-ignore\r\nexport const getTheme: string = (keys: any[] = []) =>\r\n// @ts-ignore\r\n    props => path(['theme', 'app', ...keys], props);\r\n// @ts-ignore\r\nexport const themeColor = (key: ThemeColors) => getTheme(['colors', \"main\", ThemeColors[key]]);\r\n// @ts-ignore\r\nexport const paletteColor = (key: string) => getTheme(['colors', \"palette\", key]);\r\n// @ts-ignore\r\nexport const appSizes = (key: string) => getTheme(['sizes', key]);","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../theme/themeAccessors\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport const Area = styled.main<Theme>`\r\n  //noinspection ALL${props => props.theme.breakpoints.up(\"sm\")} {\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n  }\r\n   ${props => props.theme.breakpoints.down(\"sm\")} {\r\n   height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n  }\r\n  background: ${themeColor(ThemeColors.lightBlue)};\r\n`\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const HeaderPanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.darkBlue)};\r\nheight: ${appSizes(\"header\")}px;\r\ndisplay: flex;\r\nalign-items: center;\r\nflex-direction: row-reverse;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`\r\n","import styled from \"styled-components\";\r\nimport DialpadIcon from \"@material-ui/icons/Dialpad\";\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport {ListItemIcon} from \"@material-ui/core\";\r\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {ExpandLess, ExpandMore} from \"@material-ui/icons\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport BlurOffIcon from '@material-ui/icons/BlurOff';\r\n\r\nexport const OpenPointCloudFiltersIcon = styled(DialpadIcon)`\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\nexport const ClearPointCloudIcon = styled(BlurOffIcon)`\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\nexport const AppCloseIcon = styled(CloseIcon)`\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\nexport const ArrowCloseLeft = styled(ChevronLeftIcon)`\r\n`\r\nexport const PointCloudIcon = styled(BlurOnIcon)`\r\n`\r\nexport const AppExpandLess = styled(ExpandLess)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppExpandMore = styled(ExpandMore)`\r\n  color: ${themeColor(ThemeColors.darkGray)}\r\n`\r\nexport const AppPublishIcon = styled(PublishIcon)`\r\n  ${props => props.theme.breakpoints.down(\"sm\")} {\r\n    color: ${themeColor(ThemeColors.mediumGray)}\r\n  }\r\n\r\n  ${props => props.theme.breakpoints.up(\"sm\")} {\r\n    color: ${themeColor(ThemeColors.white)}\r\n  }\r\n`\r\n\r\nexport const AppListItemIcon = styled(ListItemIcon)`\r\n`\r\n\r\nexport const AppMenuIcon = styled(MenuIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\nexport const AppMoreVertIcon = styled(MoreVertIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\nexport const AppUserAccountIcon = styled(AccountCircleIcon)`\r\n  font-size: 35px;\r\n  color: ${themeColor(ThemeColors.white)}\r\n`\r\n\r\n\r\n","import React from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderPanelContainer} from \"./style\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {AppUserAccountIcon} from \"../../shared/icons\";\r\n\r\nconst HeaderPanel: React.FC<{ theme: Theme }> = (_) => {\r\n    const {t} = useTranslation();\r\n    return (\r\n        <HeaderPanelContainer>\r\n            <Tooltip title={t('user_account')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            style={{marginLeft: 10}}>\r\n                    <AppUserAccountIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </HeaderPanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderPanel);","import React, {Fragment} from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {\r\n    pointCloudLoadFile,\r\n    showPointCloudFiltersPanel\r\n} from \"../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {ClearPointCloudIcon, OpenPointCloudFiltersIcon, AppPublishIcon} from \"../../../shared/icons\";\r\n\r\nconst PointCloudSection: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch();\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <input\r\n                    color=\"primary\"\r\n                    type=\"file\"\r\n                    onChange={(e) => {\r\n                        e.preventDefault();\r\n                        const file: File = e.target.files?.[0] as File;\r\n                        if (file && file !== undefined) {\r\n                            dispatch(pointCloudLoadFile(file));\r\n                        }\r\n                        e.preventDefault()\r\n                    }}\r\n                    id=\"icon-button-file\"\r\n                    style={{display: 'none',}}/>\r\n                <Tooltip title={t('load_file_with_point_cloud')}>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton\r\n                            component=\"span\"\r\n                            size=\"small\"\r\n                            color=\"primary\">\r\n                            <AppPublishIcon/>\r\n                        </IconButton>\r\n                    </label>\r\n                </Tooltip>\r\n            </Fragment>\r\n            <Tooltip title={t('open_panel_point_cloud_filters')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={() =>\r\n                                dispatch(showPointCloudFiltersPanel())}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <OpenPointCloudFiltersIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title={t('point_cloud_clear')}>\r\n                <IconButton size={\"small\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => null}\r\n                            style={{verticalAlign: \"bottom\", marginLeft: 8}}>\r\n                    <ClearPointCloudIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withTheme(PointCloudSection);\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../theme/themeAccessors\";\r\n\r\nexport const Panel = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.mediumGray)};\r\nheight: ${appSizes(\"instrumentalPanel\")}px;\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\npadding-left: 16px;\r\npadding-right: 16px;\r\n`","import styled from \"styled-components\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {themeColor} from \"../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../theme/ThemeColors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nexport const AppDivider = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.mediumGray)};\r\n`\r\n\r\nexport const AppDividerLight = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\n`\r\n\r\nexport const AppDividerBold = styled(Divider)`\r\nbackground-color: ${themeColor(ThemeColors.lightGray)};\r\nwidth: 1.15px;\r\nheight: 24px;\r\nmargin-left: 8px;\r\nmargin-right: 8px;\r\n`\r\n\r\n\r\n","import React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudSection from \"../sections/pointCloud\";\r\nimport {Panel} from \"./style\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {AppDividerBold} from \"../../shared/style\";\r\n\r\nconst InstrumentalPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <Panel>\r\n            <PointCloudSection/>\r\n            <AppDividerBold orientation=\"vertical\"/>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default withTheme(InstrumentalPanel);","export default function isCanvasSupported() {\r\n    const elem = document.createElement('canvas');\r\n    return !!(elem.getContext && elem.getContext('2d'));\r\n}","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const Canvas = styled.canvas<Theme>`\r\n   outline: none;\r\n   display: block;\r\n   margin: 0;\r\n   padding: 0;\r\n   width: 100vw;\r\n   ${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props) }px);\r\n   }\r\n   ${props => props.theme.breakpoints.down(\"sm\")} {\r\n      height: calc(100vh - ${props => appSizes('headerMobile')(props)}px);\r\n   }\r\n   touch-action: none;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const PointCloudContainer = styled.div`\r\n    pointerEvents: \"none\";\r\n    position: fixed;\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 61.5px;\r\n    background: transparent;\r\n    pointer-events: none;\r\n`\r\n","import {injectable} from \"inversify\";\r\nimport {EventBusService} from \"./EventBusService\";\r\nimport {EventListenerFn} from \"./EventListenerFn\";\r\nimport EventEmitter from \"events\";\r\n\r\n@injectable()\r\nclass EventBus implements EventBusService {\r\n    protected eventEmitter: EventEmitter.EventEmitter = new EventEmitter.EventEmitter();\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    subscribe(event: string, action: EventListenerFn): void {\r\n        const functions: Function[] = this.eventEmitter.listeners(event);\r\n        const alreadySubscribed = functions.map(f => f.name).includes(action.name)\r\n\r\n        if(!alreadySubscribed)\r\n            this.eventEmitter.addListener(event, action);\r\n    }\r\n\r\n    unsubscribe(event: string, action: EventListenerFn): void {\r\n        this.eventEmitter.removeListener(event, action);\r\n    }\r\n\r\n    send(event: string, value: any): void {\r\n        this.eventEmitter.emit(event, [value]);\r\n    }\r\n}\r\n\r\nexport default EventBus","import {ArcRotateCamera, Engine, Light, PointsCloudSystem, Scene} from \"@babylonjs/core\";\r\n\r\nexport default class SceneAspects {\r\n    private _engine: Engine | null = null;\r\n    private _scene: Scene | null = null;\r\n    private _camera: ArcRotateCamera | null = null;\r\n    private _light: Light | null = null\r\n    private _pointsCloudSystem: PointsCloudSystem | null = null\r\n\r\n    get pointsCloudSystem(): PointsCloudSystem | null {\r\n        return this._pointsCloudSystem;\r\n    }\r\n    set pointsCloudSystem(value: PointsCloudSystem | null) {\r\n        this._pointsCloudSystem = value;\r\n    }\r\n    get light(): Light | null {\r\n        return this._light;\r\n    }\r\n\r\n    set light(value: Light | null) {\r\n        this._light = value;\r\n    }\r\n\r\n    get camera(): ArcRotateCamera | null {\r\n        return this._camera;\r\n    }\r\n\r\n    set camera(value: ArcRotateCamera | null) {\r\n        this._camera = value;\r\n    }\r\n\r\n    get scene(): Scene | null {\r\n        return this._scene;\r\n    }\r\n\r\n    set scene(value: Scene | null) {\r\n        this._scene = value;\r\n    }\r\n\r\n    set engine(value: Engine | null) {\r\n        this._engine = value;\r\n    }\r\n\r\n    get engine(): Engine | null {\r\n        return this._engine;\r\n    }\r\n}","import {injectable} from \"inversify\";\r\nimport SceneAspects from \"../../views/components/layout/scene/code/SceneAspects\";\r\n\r\n@injectable()\r\nclass ApiProvider {\r\n    private _scene: SceneAspects = new SceneAspects();\r\n\r\n    get scene(): SceneAspects {\r\n        return this._scene;\r\n    }\r\n}\r\n\r\nexport default ApiProvider;\r\n","export const API_PROVIDER_SERVICE: symbol = Symbol.for(\"API_PROVIDER_SERVICE\");\r\nexport const EVENT_BUS_SERVICE: symbol = Symbol.for(\"EventBusService\");\r\nexport const VERSION_SERVICE: symbol = Symbol.for(\"VERSION_SERVICE\");","import {injectable} from \"inversify\";\r\nimport {build} from '../../metadata.json';\r\nimport moment from \"moment/moment\";\r\n\r\n@injectable()\r\nclass VersionService {\r\n    private static _version: string = \"None\";\r\n\r\n    constructor() {\r\n        this.Initialize()\r\n    }\r\n\r\n    private async Initialize() {\r\n        const year = moment().year()\r\n        const currentMonth = moment().month() + 1\r\n        let month = 0;\r\n        if(currentMonth <= 3)\r\n        {\r\n            month = 1;\r\n        }\r\n        else if(currentMonth <= 6)\r\n        {\r\n            month = 2;\r\n        }\r\n        else if(currentMonth <= 9)\r\n        {\r\n            month = 3;\r\n        }\r\n        else if(currentMonth <= 12)\r\n        {\r\n            month = 4;\r\n        }\r\n        VersionService._version = `${year}.${month}.${build}`\r\n    }\r\n\r\n    public GetVersion(): string {\r\n        return VersionService._version\r\n    }\r\n}\r\n\r\nexport default VersionService;","import \"reflect-metadata\";\r\nimport EventBus from '../../services/eventBus/EventBus';\r\nimport ApiProvider from \"../../services/apiProvider/ApiProvider\";\r\nimport {EventBusService} from \"../../services/eventBus/EventBusService\";\r\nimport {Container} from \"inversify\";\r\nimport {API_PROVIDER_SERVICE, EVENT_BUS_SERVICE, VERSION_SERVICE} from \"./ServiceTypes\";\r\nimport VersionService from \"../../services/version/VersionService\";\r\n\r\nconst IoC = new Container({\r\n    autoBindInjectable: true,\r\n    defaultScope: \"Singleton\",\r\n    skipBaseClassChecks: true\r\n});\r\n\r\nIoC.bind<EventBusService>(EVENT_BUS_SERVICE).to(EventBus).inSingletonScope();\r\nIoC.bind<ApiProvider>(API_PROVIDER_SERVICE).to(ApiProvider).inSingletonScope();\r\nIoC.bind<VersionService>(VERSION_SERVICE).to(VersionService).inSingletonScope();\r\n\r\nexport default IoC;\r\n","export const SHOW_SNACKBAR_EVENT = \"SHOW_SNACKBAR_EVENT\";\r\nexport const SHOW_NEW_VERSION_EVENT = \"SHOW_NEW_VERSION_EVENT\";\r\nexport const CLOSE_DRAWER_EVENT = \"CLOSE_DRAWER_EVENT\";\r\nexport const OPEN_BOTTOM_DRAWER_EVENT = \"OPEN_BOTTOM_DRAWER_EVENT\";\r\nexport const START_PROGRESS_EVENT = \"START_PROGRESS_EVENT\";\r\nexport const STOP_PROGRESS_EVENT = \"STOP_PROGRESS_EVENT\";\r\nexport const CANVAS_PINCH_EVENT = \"CANVAS_PINCH_EVENT\";\r\nexport const SHOW_BACKDROP_EVENT = \"SHOW_BACKDROP_EVENT\";\r\nexport const CLOSE_BACKDROP_EVENT = \"CLOSE_BACKDROP_EVENT\";","import {Color4, Particle, PointsCloudSystem, Scene, Vector3} from \"@babylonjs/core\";\r\nimport {PointCloudFiltersState} from \"../../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport {filterPointCloudAsync} from \"../../../../../workers/pointCloud/filterPointCloud.worker\";\r\nimport IoC from \"../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../environment/ioc/ServiceTypes\";\r\nimport {SnackbarEvent} from \"../../../snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\nimport { SHOW_SNACKBAR_EVENT } from \"../../../../../services/eventBus/EventTypes\";\r\n\r\nexport const setUpPointCloud = (file: File, cloudPointFilters: PointCloudFiltersState, scene: Scene) => {\r\n    const reader: FileReader = new FileReader()\r\n\r\n    reader.onload = async (e: ProgressEvent<FileReader>) => {\r\n        const fileText: string = <string>(reader.result)\r\n        const pointsCloudSystem = new PointsCloudSystem(\"pcs\", 3, scene, {updatable: false});\r\n        const pointCloudState = await filterPointCloudAsync(fileText, cloudPointFilters)\r\n\r\n        let constructParticle = async (particle: Particle, i: number, _: any) => {\r\n            const {vector, color} = pointCloudState[i];\r\n            particle.position = new Vector3(vector.x, vector.y, vector.z);\r\n            particle.color = new Color4(color.r, color.g, color.b)\r\n        }\r\n\r\n        const pointsLength = pointCloudState.length;\r\n        pointsCloudSystem.addPoints(pointsLength, constructParticle);\r\n\r\n        const mesh = await pointsCloudSystem.buildMeshAsync();\r\n\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        const event: SnackbarEvent = {\r\n            message: i18next.t('point_cloud_successfully_uploaded'),\r\n            alertType: \"success\"\r\n        }\r\n        eventBus.send(SHOW_SNACKBAR_EVENT, event)\r\n\r\n        return pointsCloudSystem;\r\n    };\r\n\r\n    const blob: Blob = <Blob>file;\r\n    reader.readAsText(blob);\r\n}\r\n\r\n\r\n\r\n","import {Selector, useSelector} from \"react-redux\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport * as React from \"react\";\r\nimport {\r\n    getPointCloudFiltersPanelSelector,\r\n    PointCloudFiltersState\r\n} from \"../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport {ApplicationState} from \"../../../../store/store\";\r\nimport {PointCloudContainer} from \"./style\";\r\nimport IoC from \"../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../services/eventBus/EventBusService\";\r\nimport {API_PROVIDER_SERVICE, EVENT_BUS_SERVICE} from \"../../../../environment/ioc/ServiceTypes\";\r\nimport {START_PROGRESS_EVENT, STOP_PROGRESS_EVENT} from \"../../../../services/eventBus/EventTypes\";\r\nimport i18next from \"i18next\";\r\nimport ApiProvider from \"../../../../services/apiProvider/ApiProvider\";\r\nimport {setUpPointCloud} from \"./code/setupPointCloud\";\r\nimport {Scene} from \"@babylonjs/core\";\r\nimport {SnackbarEvent} from \"../../snackbar/code/SnackbarEvent\";\r\n\r\nconst pointCloudFileSelector: Selector<ApplicationState, File | null> = state => state.ui.sections.pointCloudSection.pointsCloudFile;\r\n\r\nconst dataSelector = createSelector([getPointCloudFiltersPanelSelector, pointCloudFileSelector],\r\n    (pointCloudFilters: PointCloudFiltersState, file: File | null) => {\r\n        return {\r\n            pointCloudFilters,\r\n            file\r\n        }\r\n    })\r\n\r\nconst PointCloud = () => {\r\n    const props = useSelector(dataSelector);\r\n    const cloudPointFilters = props.pointCloudFilters\r\n    const cloudPointFile = props.file\r\n\r\n    const initialize = async () => {\r\n        const apiProvider = IoC.get<ApiProvider>(API_PROVIDER_SERVICE)\r\n\r\n        const scene = apiProvider.scene.scene as Scene;\r\n        await setUpPointCloud(cloudPointFile as File, cloudPointFilters, scene)\r\n    }\r\n\r\n    if (cloudPointFile && cloudPointFile !== null) {\r\n        initialize()\r\n    }\r\n\r\n\r\n    return (\r\n        <PointCloudContainer/>\r\n    )\r\n}\r\n\r\nexport default PointCloud","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {themeColor} from \"../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const PanelContainer = styled.section<{ theme: Theme, width: number, height: number, isActive: number }>`\r\n width: ${props => props.width}px;\r\n height: ${props => props.height}px;\r\n background: ${themeColor(ThemeColors.lightGray)};\r\n border-radius: 5px;\r\n pointer-events: auto;\r\n visibility: ${props => props.isActive ? `visible` : `hidden`};\r\n`\r\n\r\nexport const PanelHeaderContainer = styled.strong<Theme>`\r\n`\r\n\r\nexport const PanelHeader = styled.div<Theme>`\r\ncursor: move;\r\nbackground: ${themeColor(ThemeColors.darkBlue)};\r\nborder-top-left-radius: 5px;\r\nborder-top-right-radius: 5px;\r\ncolor: ${themeColor(ThemeColors.white)};\r\ntext-align: center;\r\nheight: 30px;\r\n`\r\n\r\nexport const PanelHeaderText = styled.div<Theme>`\r\nmargin-left: 8px;\r\nalign-content: center;\r\ndisplay: inline-block;\r\n`\r\n\r\nexport const PanelHeaderTypography = styled(Typography)`\r\n`;\r\n\r\nexport const PanelBodyContainer = styled.div<Theme>`\r\nmargin: 16px;\r\n`;","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const PointCloudPanelLineContainer = styled.div<Theme>`\r\nmargin-top: 12px;\r\n`\r\n\r\n","import {Theme} from \"styled-system\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {PanelBodyContainer} from \"../../shared/style\";\r\nimport {PointCloudPanelLineContainer} from \"../style\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport {isNumeric} from \"rxjs/internal-compatibility\";\r\nimport {\r\n    changeXFromLimit,\r\n    changeXToLimit,\r\n    changeYFromLimit,\r\n    changeYToLimit,\r\n    changeZFromLimit,\r\n    changeZToLimit,\r\n    getPointCloudFiltersPanelSelector, PointCloudFiltersState\r\n} from \"../../../../../../store/ui/panels/pointCloudFiltersPanel/pointCloudFiltersPanel\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../../store/store\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst dataSelector = createSelector(\r\n    [getPointCloudFiltersPanelSelector],\r\n    (filter: PointCloudFiltersState) => ({\r\n        filter : filter\r\n    })\r\n)\r\n\r\nconst PointCloudPanelFilters: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const data = useSelector(dataSelector)\r\n    const filter = data.filter\r\n\r\n    return (\r\n        <PanelBodyContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    label={t('point_cloud_x_from')}\r\n                    type=\"number\"\r\n                    name={\"x-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXFromLimit}\r\n                    onChange={event => {\r\n                        const value = event.target.value;\r\n                        if (isNumeric(value))\r\n                            dispatch(changeXFromLimit(value))\r\n                    }}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_x_to')}\r\n                    type=\"number\"\r\n                    name={\"x-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterXToLimit}\r\n                    onChange={event => dispatch(changeXToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_from')}\r\n                    type=\"number\"\r\n                    name={\"y-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYFromLimit}\r\n                    onChange={event => dispatch(changeYFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_y_to')}\r\n                    type=\"number\"\r\n                    name={\"y-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterYToLimit}\r\n                    onChange={event => dispatch(changeYToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n            <PointCloudPanelLineContainer>\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_from')}\r\n                    type=\"number\"\r\n                    name={\"z-from\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZFromLimit}\r\n                    onChange={event => dispatch(changeZFromLimit(event.target.value))}\r\n                    style={{width: 100, height: 20}}\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-number\"\r\n                    label={t('point_cloud_z_to')}\r\n                    type=\"number\"\r\n                    name={\"z-to\"}\r\n                    step=\"0.1\"\r\n                    value={filter.filterZToLimit}\r\n                    onChange={event => dispatch(changeZToLimit(event.target.value))}\r\n                    style={{width: 100, marginLeft: 24}}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    inputProps={{\r\n                        step: 0.1\r\n                    }}\r\n                    variant=\"standard\"/>\r\n            </PointCloudPanelLineContainer>\r\n        </PanelBodyContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelFilters)","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Draggable from 'react-draggable';\r\nimport {\r\n    closePointCloudFiltersPanel,\r\n    pointCloudFiltersPanelActivitySelector\r\n} from \"../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useAppDispatch} from \"../../../../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {createSelector} from \"@reduxjs/toolkit\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    PanelContainer,\r\n    PanelHeaderContainer,\r\n    PanelHeader,\r\n    PanelHeaderText,\r\n    PanelHeaderTypography\r\n} from \"../shared/style\";\r\nimport PointCloudPanelFilters from \"./shared\";\r\nimport {AppCloseIcon} from \"../../../shared/icons\";\r\n\r\nconst dataSelector = createSelector([pointCloudFiltersPanelActivitySelector], (isActive: boolean) =>\r\n    ({\r\n        isActive : isActive\r\n    })\r\n);\r\n\r\n\r\nconst PointCloudPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    const {t} = useTranslation()\r\n    const data = useSelector(dataSelector)\r\n\r\n    return (\r\n        <Draggable bounds=\"parent\" handle=\"strong\" defaultPosition={{x: 16, y: 16}}>\r\n            <PanelContainer isActive={data.isActive} width={257} height={240}>\r\n                <section>\r\n                    <PanelHeaderContainer>\r\n                        <PanelHeader>\r\n                            <PanelHeaderText>\r\n                                <PanelHeaderTypography variant=\"subtitle1\">{t('point_cloud_filters')}</PanelHeaderTypography>\r\n                            </PanelHeaderText>\r\n                            <Tooltip title={t('close')}\r\n                                     style={{\r\n                                         float: \"right\"\r\n                                     }}>\r\n                                <label>\r\n                                    <IconButton\r\n                                        component=\"span\"\r\n                                        size=\"small\"\r\n                                        onClick={() => dispatch(closePointCloudFiltersPanel())}\r\n                                        color=\"primary\">\r\n                                        <AppCloseIcon/>\r\n                                    </IconButton>\r\n                                </label>\r\n                            </Tooltip>\r\n                        </PanelHeader>\r\n                    </PanelHeaderContainer>\r\n                    <PointCloudPanelFilters/>\r\n                </section>\r\n            </PanelContainer>\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {appSizes} from \"../../theme/themeAccessors\";\r\n\r\nexport const PanelsContainer = styled.div<Theme>`\r\n    position: fixed;\r\n    height: calc(100vh - ${props => appSizes('header')(props) + appSizes('footer')(props) + appSizes('instrumentalPanel')(props)}px);\r\n    background: transparent;\r\n    pointer-events: none;\r\n    left: 0;\r\n    top: 81px;\r\n    right: 0;     \r\n`","import * as React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanel from \"./pointCloudPanel\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {PanelsContainer} from \"./style\";\r\n\r\nconst Panels: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PanelsContainer>\r\n            <PointCloudPanel/>\r\n        </PanelsContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(Panels);","export const hexToRgb = (hex : string) => {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n}","import setupAxis from \"./setupAxis\";\r\nimport {hexToRgb} from \"../../../../../utilities/color/hexToRgb\";\r\nimport {Color4, Engine, Scene} from \"@babylonjs/core\";\r\n\r\nexport default (engine: Engine, canvas: HTMLCanvasElement, bgColor: string): Scene => {\r\n    const scene: Scene = new Scene(engine);\r\n\r\n    const colorHex = bgColor\r\n    const color = hexToRgb(colorHex);\r\n    if(color && color !== null)\r\n        scene.clearColor = new Color4(color.r / 255, color.g / 255, color.b / 255, 1);\r\n\r\n    setupAxis(scene, 2);\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n    });\r\n\r\n    canvas.onresize = function() {\r\n        engine.resize();\r\n    };\r\n    window.onresize = function() {\r\n        engine.resize();\r\n    };\r\n\r\n    return scene;\r\n}\r\n\r\n\r\n// /** Add map-like controls to an ArcRotate camera.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {module:babylonjs/Cameras/arcRotateCamera.ArcRotateCamera} camera\r\n//  */\r\n// function AddControls(scene, camera) {\r\n//\r\n//     camera.inertia = 0.2;\r\n//     camera.lowerRadiusLimit = 1;\r\n//     camera.upperRadiusLimit = 350;\r\n//     // camera.upperBetaLimit = Math.PI / 2 - 0.1;\r\n//     camera.angularSensibilityX = camera.angularSensibilityY = 500;\r\n//\r\n//     const plane =\r\n//         BABYLON.Plane.FromPositionAndNormal(BABYLON.Vector3.Zero(), BABYLON.Axis.Y);\r\n//\r\n//     const inertialPanning = BABYLON.Vector3.Zero();\r\n//\r\n//     /** @type {BABYLON.Vector3} */\r\n//     let initialPos;\r\n//     const panningFn = () => {\r\n//         return;\r\n//         const pos = getPosition(scene, camera, plane);\r\n//         panning(pos, initialPos, camera.inertia, inertialPanning);\r\n//     };\r\n//\r\n//     const inertialPanningFn = () => {\r\n//         if (inertialPanning.x !== 0 || inertialPanning.y !== 0 || inertialPanning.z !== 0) {\r\n//             camera.target.addInPlace(inertialPanning);\r\n//             inertialPanning.scaleInPlace(camera.inertia);\r\n//             zeroIfClose(inertialPanning);\r\n//         }\r\n//     };\r\n//\r\n//     const wheelPrecisionFn = () => {\r\n//         camera.wheelPrecision = 1 / camera.radius * 1000;\r\n//     };\r\n//\r\n//     const zoomFn = (p, e) => {\r\n//         const delta = zoomWheel(p, e, camera);\r\n//         zooming(delta, scene, camera, plane, inertialPanning);\r\n//     }\r\n//\r\n//     const prvScreenPos = BABYLON.Vector2.Zero();\r\n//     const rotateFn = () => {\r\n//         return;\r\n//         rotating(scene, camera, prvScreenPos);\r\n//     };\r\n//\r\n//     const removeObservers = () => {\r\n//         scene.onPointerObservable.removeCallback(panningFn);\r\n//         scene.onPointerObservable.removeCallback(rotateFn);\r\n//     }\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//         if (p.event.button === 0) {\r\n//             initialPos = getPosition(scene, camera, plane);\r\n//             scene.onPointerObservable.add(panningFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         } else {\r\n//             prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//             scene.onPointerObservable.add(rotateFn, BABYLON.PointerEventTypes.POINTERMOVE);\r\n//         }\r\n//     }, BABYLON.PointerEventTypes.POINTERDOWN);\r\n//\r\n//     scene.onPointerObservable.add((p, e) => {\r\n//         removeObservers();\r\n//     }, BABYLON.PointerEventTypes.POINTERUP);\r\n//\r\n//     scene.onPointerObservable.add(zoomFn, BABYLON.PointerEventTypes.POINTERWHEEL);\r\n//\r\n//     scene.onBeforeRenderObservable.add(inertialPanningFn);\r\n//     scene.onBeforeRenderObservable.add(wheelPrecisionFn);\r\n//\r\n//     // stop context menu showing on canvas right click\r\n//     scene.getEngine().getRenderingCanvas().addEventListener(\"contextmenu\", (e) => {\r\n//         e.preventDefault();\r\n//     });\r\n// }\r\n//\r\n// /** Get pos on plane.\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  */\r\n// function getPosition(scene, camera, plane) {\r\n//     return null;\r\n//     const ray = scene.createPickingRay(\r\n//         scene.pointerX, scene.pointerY, BABYLON.Matrix.Identity(), camera, false);\r\n//     const distance = ray.intersectsPlane(plane);\r\n//\r\n//     // not using this ray again, so modifying its vectors here is fine\r\n//     return distance !== null ?\r\n//         ray.origin.addInPlace(ray.direction.scaleInPlace(distance)) : null;\r\n// }\r\n//\r\n// /** Return offsets for inertial panning given initialize and current\r\n//  * pointer positions.\r\n//  * @param {BABYLON.Vector3} newPos\r\n//  * @param {BABYLON.Vector3} initialPos\r\n//  * @param {number} inertia\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function panning(newPos, initialPos, inertia, ref) {\r\n//     const directionToZoomLocation = initialPos.subtract(newPos);\r\n//     const panningX = directionToZoomLocation.x * (1 - inertia);\r\n//     const panningZ = directionToZoomLocation.z * (1 - inertia);\r\n//     ref.copyFromFloats(panningX, 0, panningZ);\r\n//     return ref;\r\n// };\r\n//\r\n// /** Get the wheel delta divided by the camera wheel precision.\r\n//  * @param {BABYLON.PointerInfoPre} p\r\n//  * @param {BABYLON.EventState} e\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function zoomWheel(p, e, camera) {\r\n//     const event = p.event;\r\n//     event.preventDefault();\r\n//     let delta = event.wheelDelta;\r\n//     //if (event.deltaY) {\r\n//     //    delta = -event.deltaY;\r\n//     //} else if (event.wheelDelta) {\r\n//     //    delta = event.wheelDelta;\r\n//     //} else if (event.detail) {\r\n//     //    delta = -event.detail;\r\n//     //}\r\n//     delta /= camera.wheelPrecision;\r\n//     return delta;\r\n// }\r\n//\r\n// /** Zoom to pointer position. Zoom amount determined by delta.\r\n//  * @param {number} delta\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  * @param {BABYLON.Plane} plane\r\n//  * @param {BABYLON.Vector3} ref\r\n//  */\r\n// function zooming(delta, scene, camera, plane, ref) {\r\n//     // if (camera.radius - camera.lowerRadiusLimit < 1 && delta > 0) {\r\n//     //     return;\r\n//     // } else if (camera.upperRadiusLimit - camera.radius < 1 && delta < 0) {\r\n//     //     return;\r\n//     // }\r\n//     const inertiaComp = 1 - camera.inertia;\r\n//     if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp < camera.lowerRadiusLimit) {\r\n//         delta = (camera.radius - camera.lowerRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     } else if (camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp >\r\n//         camera.upperRadiusLimit) {\r\n//         delta = (camera.radius - camera.upperRadiusLimit) * inertiaComp - camera.inertialRadiusOffset;\r\n//     }\r\n//\r\n//     const zoomDistance = delta / inertiaComp;\r\n//     const ratio = zoomDistance / camera.radius;\r\n//     const vec = getPosition(scene, camera, plane);\r\n//\r\n//     if (vec !== undefined && vec) {\r\n//         const directionToZoomLocation = vec.subtract(camera.target);\r\n//         const offset = directionToZoomLocation.scale(ratio);\r\n//         offset.scaleInPlace(inertiaComp);\r\n//         ref.addInPlace(offset);\r\n//     }\r\n//     camera.inertialRadiusOffset += delta;\r\n// }\r\n//\r\n// /** Rotate the camera\r\n//  * @param {BABYLON.Scene} scene\r\n//  * @param {BABYLON.Vector2} prvScreenPos\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function rotating(scene, camera, prvScreenPos) {\r\n//     const offsetX = scene.pointerX - prvScreenPos.x;\r\n//     const offsetY = scene.pointerY - prvScreenPos.y;\r\n//     prvScreenPos.copyFromFloats(scene.pointerX, scene.pointerY);\r\n//     changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera);\r\n// }\r\n//\r\n// /** Modifies the camera's inertial alpha and beta offsets.\r\n//  * @param {number} offsetX\r\n//  * @param {number} offsetY\r\n//  * @param {BABYLON.ArcRotateCamera} camera\r\n//  */\r\n// function changeInertialAlphaBetaFromOffsets(offsetX, offsetY, camera) {\r\n//     const alphaOffsetDelta = offsetX / camera.angularSensibilityX;\r\n//     const betaOffsetDelta = offsetY / camera.angularSensibilityY;\r\n//     camera.inertialAlphaOffset -= alphaOffsetDelta;\r\n//     camera.inertialBetaOffset -= betaOffsetDelta;\r\n// }\r\n//\r\n// /** Sets x y or z of passed in vector to zero if less than Epsilon.\r\n//  * @param {BABYLON.Vector3} vec\r\n//  */\r\n// function zeroIfClose(vec) {\r\n//     if (Math.abs(vec.x) < BABYLON.Epsilon) {\r\n//         vec.x = 0;\r\n//     }\r\n//     if (Math.abs(vec.y) < BABYLON.Epsilon) {\r\n//         vec.y = 0;\r\n//     }\r\n//     if (Math.abs(vec.z) < BABYLON.Epsilon) {\r\n//         vec.z = 0;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n","import {Color3, DynamicTexture, Mesh, Scene, StandardMaterial, Vector3} from \"@babylonjs/core\";\r\n\r\nexport default function setupAxis(sceneBase: Scene, size: number) {\r\n\r\n    const makeTextPlane = function (text: string, color: string, size: number, scene: Scene) {\r\n        const dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\r\n        dynamicTexture.hasAlpha = true;\r\n        dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color, \"transparent\", true);\r\n        const plane = mesh.CreatePlane(\"TextPlane\", size, scene, true);\r\n        let standardMaterial: StandardMaterial = new StandardMaterial(\"TextPlaneMaterial\", scene);\r\n        standardMaterial.specularColor = new Color3(0, 0, 0);\r\n        standardMaterial.diffuseTexture = dynamicTexture;\r\n        plane.material = standardMaterial;\r\n        plane.material.backFaceCulling = false;\r\n        return plane;\r\n    };\r\n\r\n    const mesh = Mesh;\r\n\r\n    const axisX = mesh.CreateLines(\"axisX\", [\r\n        Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0),\r\n        new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\r\n    ], sceneBase);\r\n    axisX.color = new Color3(1, 0, 0);\r\n    const xChar = makeTextPlane(\"X\", \"red\", size / 10, sceneBase);\r\n    xChar.position = new Vector3(0.9 * size, -0.05 * size, 0);\r\n    const axisY = mesh.CreateLines(\"axisY\", [\r\n        Vector3.Zero(), new Vector3(0, size, 0), new Vector3(-0.05 * size, size * 0.95, 0),\r\n        new Vector3(0, size, 0), new Vector3(0.05 * size, size * 0.95, 0)\r\n    ], sceneBase);\r\n    axisY.color = new Color3(0, 1, 0);\r\n    const yChar = makeTextPlane(\"Y\", \"green\", size / 10, sceneBase);\r\n    yChar.position = new Vector3(0, 0.9 * size, -0.05 * size);\r\n    const axisZ = mesh.CreateLines(\"axisZ\", [\r\n        Vector3.Zero(), new Vector3(0, 0, size), new Vector3(0, -0.05 * size, size * 0.95),\r\n        new Vector3(0, 0, size), new Vector3(0, 0.05 * size, size * 0.95)\r\n    ], sceneBase);\r\n    axisZ.color = new Color3(0, 0, 1);\r\n    const zChar = makeTextPlane(\"Z\", \"blue\", size / 10, sceneBase);\r\n    zChar.position = new Vector3(0, 0.05 * size, 0.9 * size);\r\n}","import {ArcRotateCamera, Camera, Scene, Vector3} from \"@babylonjs/core\";\r\n\r\nexport default function setupCamera(canvas: HTMLCanvasElement, scene: Scene): ArcRotateCamera {\r\n    const camera: ArcRotateCamera = new ArcRotateCamera('Camera', 0, 0, -100, new Vector3(1, 2, -3), scene);\r\n\r\n    camera.setPosition(new Vector3(0, 0, -100));\r\n    camera.target = new Vector3(0, 0, 0);\r\n    camera.orthoLeft = -8;\r\n    camera.orthoRight = 8;\r\n    const ratio = canvas.height / canvas.width;\r\n    camera.orthoTop = camera.orthoRight * ratio;\r\n    camera.orthoBottom = camera.orthoLeft * ratio;\r\n\r\n    camera.attachControl(canvas, false);\r\n    camera.alpha += Math.PI; // camera +180°\r\n    camera.mode = Camera.ORTHOGRAPHIC_CAMERA;\r\n\r\n    camera.wheelPrecision = 100.0;\r\n    camera.pinchPrecision = 30;\r\n    camera.minZ = 0.01;\r\n    camera.maxZ = 1000;\r\n\r\n    camera.lowerRadiusLimit = camera.radius;\r\n    camera.upperRadiusLimit = camera.radius;\r\n    //camera.inputs.add(new ArcRotateCameraPointersCustomInput())\r\n    return camera;\r\n}","import {HemisphericLight, Light, Scene, Vector3} from \"@babylonjs/core\";\r\n\r\nexport default (scene: Scene): Light => {\r\n    const light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n    light.intensity = 0.7;\r\n\r\n    return light;\r\n}","import {ArcRotateCamera, Camera, Engine, PointerEventTypes, Scene, Vector3} from \"@babylonjs/core\";\r\n\r\nlet totalZoom = 0;\r\nlet zoomTarget: Vector3 | null = null;\r\n\r\nexport const CanvasZoom = (deltaValue: any, camera: Camera) => {\r\n    const delta = (Math.max(-1, Math.min(1, (deltaValue)))) * 0.9;\r\n    if (delta > 0 && totalZoom < 14 || delta < 0) {\r\n        totalZoom += delta;\r\n        zoom2DView(camera, delta, zoomTarget);\r\n    }\r\n}\r\n\r\nexport default function setupZoom(scene: Scene, engine: Engine, camera: Camera) {\r\n    scene.onPointerObservable.add((eventData, _) => {\r\n        const event = eventData.event as any;\r\n        CanvasZoom((event.wheelDelta || -event.detail || event.deltaY), camera);\r\n    }, PointerEventTypes.POINTERWHEEL);\r\n\r\n    scene.onPointerObservable.add(() => {\r\n        zoomTarget = Vector3.Unproject(\r\n            new Vector3(scene.pointerX, scene.pointerY, 0),\r\n            engine.getRenderWidth(),\r\n            engine.getRenderHeight(),\r\n            camera.getWorldMatrix(),\r\n            camera.getViewMatrix(),\r\n            camera.getProjectionMatrix()\r\n        );\r\n    }, PointerEventTypes.POINTERMOVE);\r\n}\r\n\r\nexport const zoom2DView = (camera: Camera, delta: number, zoomTarget: Vector3 | null) => {\r\n    const zoomingOut = delta < 0;\r\n\r\n    if (zoomTarget) {\r\n        const totalX = Math.abs(camera.orthoLeft! - camera.orthoRight!);\r\n        const totalY = Math.abs(camera.orthoTop! - camera.orthoBottom!);\r\n\r\n        const aspectRatio = totalY / totalX;\r\n\r\n        {\r\n            const fromCoord = camera.orthoLeft! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoLeft! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoRight! - zoomTarget.x;\r\n            const ratio = fromCoord / totalX;\r\n            camera.orthoRight! -= ratio * delta;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoTop! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoTop! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        {\r\n            const fromCoord = camera.orthoBottom! - zoomTarget.y;\r\n            const ratio = fromCoord / totalY;\r\n            camera.orthoBottom! -= ratio * delta * aspectRatio;\r\n        }\r\n\r\n        // decrease pan sensitivity the closer the zoom level.\r\n        (camera as ArcRotateCamera).panningSensibility = 6250 / Math.abs(totalX / 2);\r\n    }\r\n};","export enum BottomDrawerContentType{\r\n    None,\r\n    PointCloud\r\n}","export default class SolidPoint {\r\n\r\n    private _x: number = 0;\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        this._x = value;\r\n    }\r\n\r\n    private _y: number = 0;\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        this._y = value;\r\n    }\r\n\r\n    private _z: number = 0;\r\n    get z() {\r\n        return this._z;\r\n    }\r\n\r\n    set z(value: number) {\r\n        this._z = value;\r\n    }\r\n\r\n    private _parameter: number = 0;\r\n    get parameter() {\r\n        return this._parameter;\r\n    }\r\n\r\n    set parameter(value: number) {\r\n        this._parameter = value;\r\n    }\r\n\r\n    constructor(x: number, y: number, z: number, parameter: number = 0) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._parameter = parameter;\r\n    }\r\n}","import React from 'react';\r\nimport {Theme} from \"@material-ui/core/styles/createMuiTheme\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Scene} from '@babylonjs/core/scene';\r\nimport BuildRibSquareInfo from \"./code/BuildRibSquareInfo\";\r\nimport SolidPoint from \"../pointCloudSystem/code/SolidPoint\";\r\n\r\nconst Scheme: React.FC<{ theme: Theme, scene: Scene }> = (props) => {\r\n    const {scene} = props\r\n\r\n    const buildInfo: BuildRibSquareInfo = {\r\n        startPoint: new SolidPoint(0, 0, 0),\r\n        endPoint: new SolidPoint(10,10,10),\r\n        height: 5,\r\n        width: 10\r\n    }\r\n\r\n    return (\r\n        <div id=\"schemeContainer\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withTheme(Scheme);\r\n","import React, {Component, useEffect, useState} from 'react';\r\nimport 'pepjs';\r\nimport isCanvasSupported from \"../../../../utilities/dom/isCanvasSupported\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Canvas} from \"./style\";\r\nimport PointCloud from \"../pointCloudSystem\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport Panels from \"../panels\";\r\nimport {ThemeColors} from \"../../theme/ThemeColors\";\r\nimport {themeColor} from \"../../theme/themeAccessors\";\r\nimport ApiProvider from \"../../../../services/apiProvider/ApiProvider\";\r\nimport {Engine} from \"@babylonjs/core/Engines/engine\";\r\nimport setupScene from \"./code/setupScene\";\r\nimport {ArcRotateCamera, Light} from \"@babylonjs/core\";\r\nimport setupCamera from \"./code/setupCamera\";\r\nimport setupLight from \"./code/setupLight\";\r\nimport setupZoom from \"./code/setupZoom\";\r\nimport IoC from \"../../../../environment/ioc/IoC\";\r\nimport Scheme from \"../scheme\";\r\n\r\nconst Scene: React.FC<{ theme: Theme }> = (props) => {\r\n    let scene;\r\n\r\n    async function initialize(canvas: HTMLCanvasElement) {\r\n        if (!isCanvasSupported()) {\r\n            console.error('Canvas is not supported!');\r\n            alert('Canvas is not supported!');\r\n            return\r\n        }\r\n\r\n        const bgColor = themeColor(ThemeColors.lightGraySecond)(props);\r\n\r\n        const apiProvider: ApiProvider = IoC.get(Symbol.for(\"API_PROVIDER_SERVICE\"));\r\n        const sceneAspects = apiProvider.scene;\r\n\r\n        const engine: Engine = new Engine(canvas, true);\r\n        sceneAspects.engine = engine;\r\n\r\n        scene = setupScene(engine, canvas, bgColor);\r\n        sceneAspects.scene = scene;\r\n\r\n        const camera: ArcRotateCamera = setupCamera(canvas, scene);\r\n        sceneAspects.camera = camera;\r\n\r\n        const light: Light = setupLight(scene);\r\n        sceneAspects.light = light;\r\n\r\n        setupZoom(scene, engine, camera);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"canvasContainer\">\r\n            <Canvas\r\n                ref={canvas => {\r\n                    if (canvas != undefined && canvas) {\r\n                        initialize(canvas);\r\n                    }\r\n                }}\r\n            />\r\n            <PointCloud/>\r\n            <Scheme Scene={scene}/>\r\n            <Hidden smDown>\r\n                <Panels/>\r\n            </Hidden>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withTheme(Scene);\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {ThemeColors} from \"../../../theme/ThemeColors\";\r\nimport {appSizes, themeColor} from \"../../../theme/themeAccessors\";\r\n\r\nexport const HeaderMobilePanelContainer = styled.div<Theme>`\r\nbackground: ${themeColor(ThemeColors.lightGray)};\r\nheight: ${appSizes(\"headerMobile\")}px;\r\nflexGrow: 1;\r\n`\r\n","import ListItem from \"@material-ui/core/ListItem\";\r\nimport {ListItemIcon, Theme} from \"@material-ui/core\";\r\nimport BlurOnIcon from \"@material-ui/icons/BlurOn\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport {\r\n    pointCloudLoadFile\r\n} from \"../../../../../../../store/ui/sections/pointCloudSection/pointCloudSection\";\r\nimport {useAppDispatch} from \"../../../../../../../store/store\";\r\nimport IoC from \"../../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../../environment/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT, OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"../../bottom/code/BottomDrawerContentType\";\r\nimport {\r\n    AppListItemIcon,\r\n    AppExpandLess,\r\n    AppExpandMore,\r\n    AppPublishIcon,\r\n    OpenPointCloudFiltersIcon,\r\n    PointCloudIcon,\r\n    ClearPointCloudIcon\r\n} from \"../../../../../shared/icons\";\r\nimport {themeColor} from \"../../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../../theme/ThemeColors\";\r\n\r\nconst PointCloudMenuItem: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [state, setState] = useState({\r\n        subMenuIsOpen: false\r\n    })\r\n    const {subMenuIsOpen} = state\r\n\r\n    const handleClick = () => {\r\n        setState({subMenuIsOpen: !subMenuIsOpen});\r\n    };\r\n\r\n    const openPanelPointCloudFiltersClickHandle = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(OPEN_BOTTOM_DRAWER_EVENT, {contentType: BottomDrawerContentType.PointCloud})\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    };\r\n    const btnColor = themeColor(ThemeColors.mediumGray)(props)\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <PointCloudIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary={t('point_cloud')}/>\r\n                {subMenuIsOpen ? <AppExpandLess/> : <AppExpandMore/>}\r\n            </ListItem>\r\n            <Collapse in={subMenuIsOpen} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <Fragment>\r\n                            <input\r\n                                color=\"primary\"\r\n                                type=\"file\"\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();\r\n                                    const file: File = e.target.files?.[0] as File;\r\n                                    if (file && file !== undefined) {\r\n                                        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n                                        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n                                        dispatch(pointCloudLoadFile(file));\r\n                                    }\r\n                                }}\r\n                                id=\"icon-button-file\"\r\n                                style={{display: 'none'}}/>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemIcon>\r\n                                    <AppPublishIcon style={{\r\n                                        color: btnColor\r\n                                    }}/>\r\n                                </ListItemIcon>\r\n                            </label>\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <ListItemText primary={t('load_file_with_point_cloud')}/>\r\n                            </label>\r\n                        </Fragment>\r\n\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <AppListItemIcon\r\n                            onClick={openPanelPointCloudFiltersClickHandle}>\r\n                            <OpenPointCloudFiltersIcon style={{\r\n                                color: btnColor\r\n                            }}/>\r\n                        </AppListItemIcon>\r\n                        <ListItemText\r\n                            onClick={openPanelPointCloudFiltersClickHandle}\r\n                            primary={t('open_panel_point_cloud_filters')}/>\r\n                    </ListItem>\r\n                    <ListItem button style={{paddingLeft: 32}}>\r\n                        <AppListItemIcon>\r\n                            <ClearPointCloudIcon style={{\r\n                                color: btnColor\r\n                            }}/>\r\n                        </AppListItemIcon>\r\n                        <ListItemText\r\n                            primary={t('point_cloud_clear')}/>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudMenuItem)\r\n","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {themeColor} from \"../../../../theme/themeAccessors\";\r\nimport {ThemeColors} from \"../../../../theme/ThemeColors\";\r\n\r\nexport const DrawerContainer = styled.section<Theme>`\r\nwidth : 250px;\r\n`\r\nexport const DrawerHeader = styled.div<Theme>`\r\ndisplay: flex;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n\r\n${props => props.theme.breakpoints.up(\"sm\")} {\r\n      height: 104px;\r\n}\r\n${props => props.theme.breakpoints.down(\"sm\")} {\r\n       height: 56px;\r\n}\r\n`\r\n\r\nexport const DrawerHeaderTitle = styled(Typography)`\r\n color: ${themeColor(ThemeColors.darkBlue)};\r\n margin-right: auto;\r\n margin-left: 16px;\r\n`","import * as React from \"react\";\r\nimport IoC from \"../../../environment/ioc/IoC\";\r\nimport VersionService from \"../../../services/version/VersionService\";\r\nimport {VERSION_SERVICE} from \"../../../environment/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst loadVersion = () => {\r\n    const versionService = IoC.get<VersionService>(VERSION_SERVICE)\r\n    return versionService.GetVersion()\r\n}\r\nconst Version: React.FC<{ isDark: boolean }> = (props) => {\r\n    const {t} = useTranslation()\r\n    const {isDark} = props\r\n    return (\r\n        <div style={{\r\n            color: isDark ? \"black\" : \"white\"\r\n        }}>     {t('version')}\r\n            : {loadVersion()}\r\n        </div>\r\n    );\r\n}\r\nexport default Version;","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport IoC from \"../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../environment/ioc/ServiceTypes\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport PointCloudMenuItem from \"./pointCloudMenuItem\";\r\nimport {DrawerContainer, DrawerHeader, DrawerHeaderTitle} from \"./style\";\r\nimport Version from \"../../../../version\";\r\nimport { ArrowCloseLeft } from \"../../../../shared/icons\";\r\n\r\ninterface DrawerPanelProps {\r\n    theme: Theme,\r\n    isOpen: boolean\r\n}\r\n\r\nconst DrawerLeftPanel: React.FC<DrawerPanelProps> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false\r\n    });\r\n    const {isOpen} = state;\r\n\r\n    useEffect(() => {\r\n            setState({isOpen: props.isOpen})\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const handleDrawerClose = () => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.send(CLOSE_DRAWER_EVENT, {})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"left\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerContainer>\r\n                <DrawerHeader>\r\n                    <DrawerHeaderTitle variant=\"h5\">{t('aeroset')}</DrawerHeaderTitle>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ArrowCloseLeft onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerHeader>\r\n                <Divider/>\r\n                <List\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    style={{width: '100%'}}\r\n                >\r\n                    <PointCloudMenuItem/>\r\n                </List>\r\n                <div style={{position:\"absolute\", bottom: 8, left: 8}}>\r\n                    <Version isDark={true}/>\r\n                </div>\r\n            </DrawerContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerLeftPanel)","import styled from \"styled-components\";\r\nimport {Theme} from \"@material-ui/core\";\r\n\r\nexport const DrawerBottomContainer = styled.section<Theme>`\r\nheight : 270px;\r\nalign-content: center;\r\n`\r\nexport const DrawerBottomHeader = styled.div<Theme>`\r\ndisplay: flex;\r\nvertical-align: center;\r\njustify-content: flex-end;\r\nalign-items: center;\r\npadding: ${props => props.theme.spacing(0, 1)};\r\n`\r\n\r\nexport const MobilePanelContainer = styled.div<Theme>`\r\nvisibility: ${props => {\r\n    // @ts-ignore\r\n    return (props.currentType && props.stateType && props.currentType.valueOf() === props.stateType.valueOf()) ? `visible` : `collapse`;\r\n}};\r\n\r\n`","import styled from \"styled-components\";\r\nimport {Theme} from \"styled-system\";\r\n\r\nexport const PointCloudPanelMobileContainer = styled.div<Theme>`\r\nwidth: 100%;\r\ndisplay: flex;\r\njustify-content: center\r\n`","import React from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport PointCloudPanelFilters from \"../shared\";\r\nimport {PointCloudPanelMobileContainer} from \"./style\";\r\n\r\nconst PointCloudPanelMobile: React.FC<{ theme: Theme }> = (props) => {\r\n    return (\r\n        <PointCloudPanelMobileContainer>\r\n            <PointCloudPanelFilters/>\r\n        </PointCloudPanelMobileContainer>\r\n    )\r\n}\r\n\r\nexport default withTheme(PointCloudPanelMobile)","import {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {DrawerBottomContainer, DrawerBottomHeader, MobilePanelContainer} from \"./style\";\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport IoC from \"../../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../../environment/ioc/ServiceTypes\";\r\nimport {OPEN_BOTTOM_DRAWER_EVENT} from \"../../../../../../services/eventBus/EventTypes\";\r\nimport {BottomDrawerContentType} from \"./code/BottomDrawerContentType\";\r\nimport {AppDivider} from \"../../../../shared/style\";\r\nimport {PanelHeader, PanelHeaderText, PanelHeaderTypography} from \"../../../panels/shared/style\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PointCloudPanelMobile from \"../../../panels/pointCloudPanel/mobile\";\r\n\r\nconst DrawerBottomPanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        isOpen: false,\r\n        visiblePanel: BottomDrawerContentType\r\n    });\r\n    const {isOpen, visiblePanel} = state;\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(OPEN_BOTTOM_DRAWER_EVENT, contentChangedHandler)\r\n        }\r\n    }, [])\r\n\r\n    const contentChangedHandler = (events: any[]) => {\r\n        const content = events[0] as { contentType: BottomDrawerContentType }\r\n        setState({visiblePanel: content.contentType, isOpen: true})\r\n    }\r\n\r\n    const handleDrawerClose = () => {\r\n        setState({...state, isOpen: false})\r\n    }\r\n\r\n    return (\r\n        <Drawer anchor=\"bottom\"\r\n                open={isOpen}\r\n                onClose={handleDrawerClose}>\r\n            <DrawerBottomContainer>\r\n                <DrawerBottomHeader>\r\n                    <div style={{marginRight: \"auto\"}}>\r\n                        <Typography variant=\"h6\">\r\n                            <MobilePanelContainer currentType={BottomDrawerContentType.PointCloud}\r\n                                                  stateType={visiblePanel}>\r\n                                {t('point_cloud_filters')}\r\n                            </MobilePanelContainer>\r\n                        </Typography>\r\n                    </div>\r\n                    <Tooltip title={t('close')}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <KeyboardArrowDownIcon onClick={handleDrawerClose}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </DrawerBottomHeader>\r\n                <AppDivider/>\r\n                <MobilePanelContainer currentType={BottomDrawerContentType.PointCloud} stateType={visiblePanel}>\r\n                    <PointCloudPanelMobile/>\r\n                </MobilePanelContainer>\r\n            </DrawerBottomContainer>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default withTheme(DrawerBottomPanel)","import React, {useEffect, useState} from \"react\";\r\nimport {Theme} from \"@material-ui/core\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {HeaderMobilePanelContainer} from \"./style\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport DrawerLeftPanel from \"../drawer/left\";\r\nimport IoC from \"../../../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../../../environment/ioc/ServiceTypes\";\r\nimport {CLOSE_DRAWER_EVENT} from \"../../../../../services/eventBus/EventTypes\";\r\nimport DrawerBottomPanel from \"../drawer/bottom\";\r\nimport {\r\n    AppUserAccountIcon,\r\n    AppMenuIcon,\r\n    AppMoreVertIcon\r\n} from \"../../../shared/icons\";\r\n\r\nconst HeaderMobilePanel: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation();\r\n\r\n    const [state, setState] = useState({\r\n        drawerIsOpen: false\r\n    })\r\n\r\n    useEffect(() => {\r\n            const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n            eventBus.subscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            setState({isOpen: props.isOpen})\r\n            return () => {\r\n                eventBus.unsubscribe(CLOSE_DRAWER_EVENT, onCloseDrawerEvent)\r\n            }\r\n        }, [props.isOpen]\r\n    )\r\n\r\n    const onCloseDrawerEvent = (_) => {\r\n        setState({drawerIsOpen: false})\r\n    }\r\n\r\n    const menuButtonClickHandle = () => {\r\n        setState({drawerIsOpen: true})\r\n    }\r\n\r\n    return (\r\n        <HeaderMobilePanelContainer>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar style={{background: props.theme.app.colors.main.darkBlue}}>\r\n                    <Tooltip title={t('menu')}>\r\n                        <IconButton size={\"medium\"}\r\n                                    aria-label=\"open drawer\"\r\n                                    style={{verticalAlign: \"middle\"}}\r\n                                    onClick={menuButtonClickHandle}>\r\n                            <AppMenuIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Typography variant=\"h6\" style={{display: \"block\", flexGrow: 1, marginLeft: 16}}>\r\n                        'Scheme name'\r\n                    </Typography>\r\n                    <Tooltip title={t('actions')}>\r\n                        <IconButton size={\"small\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <AppMoreVertIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={t('user_account')}>\r\n                        <IconButton size={\"small\"}\r\n                                    style={{marginLeft: 10}}>\r\n                            <AppUserAccountIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <DrawerLeftPanel isOpen={state.drawerIsOpen}/>\r\n            <DrawerBottomPanel/>\r\n        </HeaderMobilePanelContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(HeaderMobilePanel);","import {Theme} from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const SnackbarWrapper = styled.div<Theme>`\r\nwidth: 100%;\r\nheight: 100%;\r\n`","import {Theme} from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IoC from \"../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../services/eventBus/EventBusService\";\r\nimport {SHOW_NEW_VERSION_EVENT, SHOW_SNACKBAR_EVENT} from \"../../../services/eventBus/EventTypes\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../environment/ioc/ServiceTypes\";\r\nimport {SnackbarWrapper} from \"./style\";\r\nimport {SnackbarEvent} from \"./code/SnackbarEvent\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst SnackbarContainer: React.FC<{ theme: Theme }> = (props) => {\r\n    const {t} = useTranslation()\r\n\r\n    const [snackbarState, setSnackbarState] = useState<{\r\n        open: boolean,\r\n        message: string,\r\n        alertType: string,\r\n        callback?: Function,\r\n        isVersionSnackbar: boolean\r\n    }>({\r\n        open: false,\r\n        alertType: \"success\",\r\n        message: \"\",\r\n        isVersionSnackbar: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n        eventBus.subscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(SHOW_SNACKBAR_EVENT, snackbarEventHandler)\r\n            eventBus.unsubscribe(SHOW_NEW_VERSION_EVENT, showNewVersionEventHandler)\r\n        }\r\n    }, [])\r\n\r\n    const snackbarEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            isVersionSnackbar: false,\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback\r\n        });\r\n    }\r\n\r\n    const showNewVersionEventHandler = (events: any[]) => {\r\n        const event: SnackbarEvent = events[0] as SnackbarEvent\r\n        const {message, alertType, callback} = event\r\n        setSnackbarState({\r\n            open: true,\r\n            message: message,\r\n            alertType: alertType,\r\n            callback: callback,\r\n            isVersionSnackbar: true\r\n        });\r\n    }\r\n\r\n    const handleCloseSnackbar = (event: object, reason: string) => {\r\n        if (reason === \"timeout\")\r\n            setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setSnackbarState({...snackbarState, open: false});\r\n    };\r\n\r\n    const {open, message, callback, alertType, isVersionSnackbar} = snackbarState;\r\n\r\n    const reload = () => {\r\n        location.reload();\r\n        return false;\r\n    }\r\n\r\n    const updateVersionAction = (\r\n        <Button color=\"primary\" size=\"small\" onClick={reload}>\r\n            {t('update')}\r\n        </Button>\r\n    )\r\n    return (\r\n        <SnackbarWrapper>\r\n            <Snackbar\r\n                style={{position: \"absolute\", alignContent: \"center\"}}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleCloseSnackbar}\r\n                autoHideDuration={isVersionSnackbar ? null : 5000}>\r\n                <Alert onClose={handleClose}\r\n                       severity={alertType}\r\n                       style={{verticalAlign: \"middle\"}}\r\n                       closeText={t('close')}\r\n                       action={isVersionSnackbar ? updateVersionAction : null}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </SnackbarWrapper>\r\n    )\r\n}\r\nexport default withTheme(SnackbarContainer)","import React from \"react\";\r\nimport {withTheme} from \"styled-components\";\r\nimport {Area} from \"./styles\";\r\nimport {Hidden, Theme} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HeaderPanel from \"../layout/headerPanel\";\r\nimport InstrumentalPanel from \"../layout/instrumentalPanel\";\r\nimport StatePanel from \"../layout/statePanel\";\r\nimport Scene from \"../layout/scene\";\r\nimport HeaderMobilePanel from \"../layout/mobile/headerPanel\";\r\nimport SnackbarContainer from \"../snackbar\";\r\nimport {AppDividerLight} from \"../shared/style\";\r\nimport Version from \"../version\";\r\n\r\nconst App: React.FC<{ theme: Theme }> = (_) => {\r\n    return (\r\n            <SnackbarContainer>\r\n                <Hidden smDown>\r\n                    <div style={{position: \"absolute\", left: 8, top: 8}}>\r\n                        <Version/>\r\n                    </div>\r\n                </Hidden>\r\n                <Grid container\r\n                      spacing={0}\r\n                      alignItems=\"stretch\"\r\n                      direction={\"column\"}>\r\n                    <Hidden smDown>\r\n                        <Grid item xs={12}>\r\n                            <HeaderPanel/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <Grid item xs={12}>\r\n                            <HeaderMobilePanel/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                    <Grid item xs={12}>\r\n                        <AppDividerLight/>\r\n                    </Grid>\r\n                    <Hidden smDown>\r\n                        <Grid item xs={12}>\r\n                            <InstrumentalPanel/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                    <Hidden smDown>\r\n                        <Grid item xs={12}>\r\n                            <AppDividerLight/>\r\n                        </Grid>\r\n                    </Hidden>\r\n                    <Grid item xs={12}>\r\n                        <Area>\r\n                            <Scene/>\r\n                        </Area>\r\n                    </Grid>\r\n                </Grid>\r\n            </SnackbarContainer>\r\n    );\r\n}\r\n\r\nexport default withTheme(App);","import React, {useEffect, useState} from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {createMuiTheme, Theme} from \"@material-ui/core\";\r\nimport {ThemeProvider, withTheme} from \"styled-components\";\r\nimport IoC from \"../../../environment/ioc/IoC\";\r\nimport {EventBusService} from \"../../../services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE} from \"../../../environment/ioc/ServiceTypes\";\r\nimport {\r\n    CLOSE_BACKDROP_EVENT,\r\n    SHOW_BACKDROP_EVENT\r\n} from \"../../../services/eventBus/EventTypes\";\r\nimport {purple} from \"@material-ui/core/colors\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst AppBackdrop: React.FC<{ theme: Theme }> = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const [backdropState, setBackdropState] = useState<{\r\n        open: boolean,\r\n        message: string\r\n    }>({\r\n        open: false,\r\n        message: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n        eventBus.subscribe(SHOW_BACKDROP_EVENT, backdropEventHandler)\r\n        eventBus.subscribe(CLOSE_BACKDROP_EVENT, closeBackdropEventHandler)\r\n\r\n        return () => {\r\n            eventBus.unsubscribe(SHOW_BACKDROP_EVENT, backdropEventHandler)\r\n            eventBus.unsubscribe(CLOSE_BACKDROP_EVENT, closeBackdropEventHandler)\r\n        }\r\n    }, [])\r\n\r\n    function backdropEventHandler(events: any[]) {\r\n        const eventMessage: string = events[0] as string\r\n        setBackdropState({open: true, message: eventMessage})\r\n    }\r\n\r\n    function closeBackdropEventHandler(events: any[]) {\r\n        setBackdropState({open: false, message: \"\"})\r\n    }\r\n\r\n    const {open, message} = backdropState\r\n    // @ts-ignore\r\n    const innerTheme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: purple[500],\r\n            },\r\n            secondary: {\r\n                main: '#42baf5'\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={innerTheme}>\r\n            <Backdrop open={open} className={classes.backdrop}>\r\n                <CircularProgress color=\"secondary\"/>\r\n            </Backdrop>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default withTheme(AppBackdrop)","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./internationalization/i18n\"; // import i18n (needs to be bundled ;))\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'fontsource-roboto';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\nimport {GlobalStyle} from \"./globalStyle\";\r\nimport Theme from \"./views/components/theme\";\r\nimport App from \"./views/components/app\";\r\nimport {CssBaseline, Hidden} from \"@material-ui/core\";\r\nimport IoC from \"./environment/ioc/IoC\";\r\nimport {EventBusService} from \"./services/eventBus/EventBusService\";\r\nimport {EVENT_BUS_SERVICE, VERSION_SERVICE} from \"./environment/ioc/ServiceTypes\";\r\nimport {SnackbarEvent} from \"./views/components/snackbar/code/SnackbarEvent\";\r\nimport i18next from \"i18next\";\r\nimport initWorkboxRefresh from '@loopmode/cra-workbox-refresh';\r\nimport 'pepjs';\r\nimport AppBackdrop from \"./views/components/backdrop\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        {/*<BrowserRouter>*/}\r\n        {/*<React.StrictMode>*/}\r\n            <GlobalStyle/>\r\n            <CssBaseline/>\r\n            <Theme>\r\n                <Suspense fallback=\"\">\r\n                    <App/>\r\n                    <AppBackdrop/>\r\n                </Suspense>\r\n            </Theme>\r\n        {/*</React.StrictMode>*/}\r\n        {/*</BrowserRouter>*/}\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction renderRefreshUI(registration: any, {_}) {\r\n    const eventBus = IoC.get<EventBusService>(EVENT_BUS_SERVICE)\r\n    const event: SnackbarEvent = {\r\n        message: i18next.t('new_version'),\r\n        alertType: \"info\"\r\n    }\r\n    eventBus.send('SHOW_NEW_VERSION_EVENT', event)\r\n}\r\n\r\nwindow.onerror = function unhandledExceptionErrorHandler(errorMsg, url, lineNumber) {\r\n    return false;\r\n}\r\n\r\nserviceWorker.register({\r\n    onUpdate: (registration: any) => {\r\n        console.log(\"New Version\")\r\n        // @ts-ignore\r\n        return initWorkboxRefresh(registration, {render: renderRefreshUI});\r\n    }\r\n})\r\n"],"sourceRoot":""}